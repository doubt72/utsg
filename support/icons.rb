helmet_paths = [
  [
    ['M', 14, 50],
    ['C', [22, 38], [74, 38], [86, 50]],
    ['C', [86, 0], [14, 0], [14, 50]],
  ],
  [
    ['M', 20, 52],
    ['C', [24, 43], [72, 43], [80, 52]],
    ['C', [80, 100], [20, 100], [20, 52]],
  ],
]

font_base64 = %w[
  AAEAAAAQAQAABAAAR0RFRgSHCHMAAAGQAAAAPEdTVUL+MPU1AAAI9AAAA85PUy8y
  cMiKKAAAAcwAAABgY21hcDv1W20AAANYAAACdmN2dCAm4RCFAAACLAAAAGxmcGdt
  njYTzgAAH5wAAA4VZ2FzcAAAABAAAAEMAAAACGdseWYNiCoyAAAttAAA3RpoZWFk
  HFEb1AAAAVgAAAA2aGhlYQ/W+9UAAAE0AAAAJGhtdHhAN9U6AAARJAAABiZsb2Nh
  n8RoIgAABdAAAAMibWF4cAL8D0kAAAEUAAAAIG5hbWVwoI4GAAAMxAAABGBwb3N0
  i8b+xwAAF0wAAAhPcHJlcFqx3zsAAAKYAAAAvQABAAH//wAPAAEAAAGQAHAABgBl
  AAQAAgAsAFoAjQAAAKYOFQACAAMAAQAABkD9RAAABMz9CfhBDIsAAQAAAAAAAAAA
  AAAAAAAAAYMAAQAAAAMEm6SfrmlfDzz1AA8IAAAAAADZnIPhAAAAANn7SUf9Cf3y
  DIsHIwAAAAcAAgAAAAAAAAABAAAALAAAAAwAAAAIAAIAGAAQAAEAAgFSAVMAAQAE
  AAECKwABAAQAAQIBAAIAAgFSAVMAAgGAAYEAAwAEBMwBkAAFAAAFMwTMAAAAmQUz
  BMwAAALMAIICKgAAAAAFCQAAAAAAAAAAAAcAAAAAAAAAAAAAAABRVVFBAMAADfsC
  BkD9RAAAB2wDICAAAJMAAAAAA5wEowAAACAAAwAAAAAAAAAAAAAAAAAAAAAAAAAA
  AAAAAAAAAAAAAAAAADIAMgAyADIEuQAAA5z/9v5yBLkAAAOc//b+cgCeAJ4AlACU
  BKMAAAUgA5wAAP58BLn/6gVTA7L/6v5mADIAMgAyADIFNgHjBTYB0QBLuADIUlix
  AQGOWbABuQgACABjcLEAB0K0ACsbAwAqsQAHQrcwBCAIEgcDCiqxAAdCtzQCKAYZ
  BQMKKrEACkK8DEAIQATAAAMACyqxAA1CvABAAEAAQAADAAsquQADAABEsSQBiFFY
  sECIWLkAAwBkRLEoAYhRWLgIAIhYuQADAABEWRuxJwGIUVi6CIAAAQRAiGNUWLkA
  AwAARFlZWVlZtzICIgYUBQMOKrgB/4WwBI2xAgBEswVkBgBERAAAAAAAAAIAAAAD
  AAAAFAADAAEAAAAUAAQCYgAAAHYAQAAFADYADQB+AKAAqgC7ARMBFQEnATEBNwE+
  AUABSAFPAWEBaQFzAXcBfgGSAhsCNwLHAt0DJgOUA6kDvAPAHoUe8yARIBQgGiAe
  ICIgJiAwIDMgOiBEIHQgoyCpIKwhIiICIg8iEiIVIhoiHiIrIkgiYCJlJcr7Av//
  AAAADQAgAKAAoQCrALwBFAEWASgBMgE5AT8BQQFKAVABYgFqAXQBeAGSAhgCNwLG
  AtgDJgOUA6kDvAPAHoAe8iARIBMgGCAcICAgJiAwIDIgOSBEIHQgoyCpIKwhIiIC
  Ig8iESIVIhoiHiIrIkgiYCJkJcr7Af////X/4wDY/8EAAP++AAD/vAAA/7f/tgAA
  /7QAAP+vAAD/qwAA/6f/lAAA/vL+ZP5U/lr9sv2b/Lj9cgAAAADhZOEg4R3hHOEb
  4RjhD+FM4Qfg/uD/4Nfg0uDN4CHfQ9843zffZ98w3y3fId8F3u7e69uHBlEAAQAA
  AAAAAAAAAG4AAACMAAAAjAAAAAAAmgAAAJoAAACiAAAArgAAAAAAsAAAAAAAAAAA
  AAAAAAAAAAAApgCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  AAAAAAAAAAAAAAAAAAAAAAAAAAABdgBsAXQAbQBuAG8AcABxAHIAcwF9AHUAdgB3
  AHgAeQF3AVYBZAFYAWcA5ADlAVcBZgDmAOcA6AFlAVkBaAFaAWkA/QD+AVsBagFU
  AVUBEwEUAVwBawFdAWwBXwFuAWIBcQEnASgBEQESAWEBcAFeAW0BYAFvAWMBcgAA
  AAAAiACIAIgAiADiAPABjwJgAwoD6AQeBGIEpgUjBWoFmAXBBeYGIwZtBrYHMget
  CAYIdwjcCTIJrAoQClEKlwrVCxoLWAviDI0M9A1ZDcQOEQ6rDzYPrxArEHAQwxFc
  EasSKRKlEu8TRxQOFI8VIhV5Fc8WIxajFyUXihffGBoYVxiSGNoZAxkwGfUasxsd
  G9scORy8HZoeIh4uHjoezR8cH+EghCDMIXciIiKhIzUjkiQgJHQk4yVjJcQmRSbM
  Jv0ngyfjKD0ozymhKisqxiscK9osHizBLT0tcC4JLjYugy7kL18v2DAIMGQwqzC7
  MSkxcDG3MmUzZzR+NQg1GjUsNT41UDViNXQ2JTbpNvs3DTcfNzE3QzdVN2c3eTfm
  N/g4CjgcOC44QDhSOKY5NzlJOVs5bTl/OZE5+TqwOrw6yDrUOuA67Dr4O5Y8Wjxm
  PHI8fjyKPJY8ojyuPLo9cD18PYg9lD2gPaw9uD4XPqM+rz67Psc+0z7fP3E/fT+P
  P5s/rT+5QGVBjkGgQaxBvkHKQdxB6EH6QgZCGEMEQ3JEe0SNRJlEq0S3RahGK0Y9
  RklGW0ZnRnlGhUaXRqNGr0e+R9BH4kiISUpJXEloSe5Kr0rBS4BMUUxjTG9Me0yH
  TJlMq0y3TMNM1UzhTVtN203tTflOBU4RTiNOL05BTk1OX05rTvtPfU+PT5tPp0+z
  T8VP0U/jT+9QAVANUSlSRlJYUmRScFJ8Uo5SoFKyUr5S0FLcUu5S+lMMUxhTr1Sm
  VLhUylTWVOhU9FUGVRhVrlW6VcZWElZOVopW0Fb8V0RXk1gQWFxYoFjJWPJZJ1lc
  WWxZelmIWZZZ2FqIWrFbBFviXBlcUVx+Xgpea17dXxlfVV+kX81gFWCHYORg/GGM
  YeViPmKDY3ZkTmUJZetl/WYPZiFmjmcVZydnm2etZ79n0WfjZ/VoB2gZaCVoZGhw
  aHxojmlSaV5p02nfaetp92oDag9qG2onanZqn2qnarVqw2rDa2lsA2y7bOxs9G0j
  bTFtZW2VbaVttW3ubf5uBm4WbiZuNm5GblZuZm5ubn5ujQAAAAEAAAAKAKIBmgAD
  REZMVACEZ3JlawBwbGF0bgAUAEwAA0NBVCAAOk1PTCAAKFJPTSAAFgAA//8ABgAF
  AAsAEQAUABoAIAAA//8ABgAEAAoAEAATABkAHwAA//8ABgADAAkADwASABgAHgAA
  //8ABQACAAgADgAXAB0ABAAAAAD//wAFAAEABwANABYAHAAEAAAAAP//AAUAAAAG
  AAwAFQAbACFhYWx0APJhYWx0APJhYWx0APJhYWx0APJhYWx0APJhYWx0APJjYXNl
  AOxjYXNlAOxjYXNlAOxjYXNlAOxjYXNlAOxjYXNlAOxmcmFjAOZmcmFjAOZmcmFj
  AOZmcmFjAOZmcmFjAOZmcmFjAOZsb2NsAOBsb2NsANpsb2NsANRvcmRuAM5vcmRu
  AM5vcmRuAM5vcmRuAM5vcmRuAM5vcmRuAM5zdXBzAMhzdXBzAMhzdXBzAMhzdXBz
  AMhzdXBzAMhzdXBzAMgAAAABAAQAAAABAAYAAAABAAEAAAABAAIAAAABAAMAAAAB
  AAUAAAABAAcAAAABAAAACgG6AZgBmAFUATQA+ACwAGYAOAAWAAEAAAABAAgAAgAO
  AAQAawB5AGsAeQABAAQAJAAyAEQAUgAEAAAAAQAIAAEAHgACABQACgABAAQBaAAC
  AHYAAQAEAVkAAgB2AAEAAgAvAE8AAQAAAAEACAACACIADgGKAYgBjAGCAYYBhwGF
  AYMBiQGOAY0BjwGLAYEAAQAOAEMAaQBuAHMAdwEqASsBLAEtAS4BLwEwATEBgAAG
  AAAAAgAkAAoAAwABADQAAQASAAAAAQAAAAkAAQACADIAUgADAAEAGgABABIAAAAB
  AAAACQABAAIAJABEAAIAAQATABwAAAAEAAAAAQAIAAEALAACABYACgABAAQAfAAD
  ABIAFwACAA4ABgB6AAMAEgAXAHsAAwASABUAAQACABQAFgABAAAAAQAIAAIADgAE
  AHgAcQByAXMAAgABABQAFwAAAAYAAAACACQACgADAAAAAgAUAC4AAQAUAAEAAAAI
  AAEAAQAvAAMAAAACABoAFAABABoAAQAAAAgAAQABAHYAAQABAE8AAQAAAAEACAAC
  AA4ABAEnASgBEQESAAEABAENAQ4BVAFVAAEAAAABAAgAAgA6ABoAeABxAHIBcwBr
  AHkBigBrAHkBiAGMAYIBhgEnASgBhwGFAYMBiQGOAY0BjwGLAREBEgGBAAEAGgAU
  ABUAFgAXACQAMgBDAEQAUgBpAG4AcwB3AQ0BDgEqASsBLAEtAS4BLwEwATEBVAFV
  AYAAAAAAAA0AogADAAEECQAAAMgC9gADAAEECQABABoC3AADAAEECQACAA4CzgAD
  AAEECQADAD4CkAADAAEECQAEACoCZgADAAEECQAFABoCTAADAAEECQAGACgCJAAD
  AAEECQAIACQCAAADAAEECQAJAEoBtgADAAEECQALADYBgAADAAEECQAMACwBVAAD
  AAEECQANASAANAADAAEECQAOADQAAABoAHQAdABwADoALwAvAHMAYwByAGkAcAB0
  AHMALgBzAGkAbAAuAG8AcgBnAC8ATwBGAEwAVABoAGkAcwAgAEYAbwBuAHQAIABT
  AG8AZgB0AHcAYQByAGUAIABpAHMAIABsAGkAYwBlAG4AcwBlAGQAIAB1AG4AZABl
  AHIAIAB0AGgAZQAgAFMASQBMACAATwBwAGUAbgAgAEYAbwBuAHQAIABMAGkAYwBl
  AG4AcwBlACwAIABWAGUAcgBzAGkAbwBuACAAMQAuADEALgAgAFQAaABpAHMAIABs
  AGkAYwBlAG4AcwBlACAAaQBzACAAYQB2AGEAaQBsAGEAYgBsAGUAIAB3AGkAdABo
  ACAAYQAgAEYAQQBRACAAYQB0ADoAIABoAHQAdABwADoALwAvAHMAYwByAGkAcAB0
  AHMALgBzAGkAbAAuAG8AcgBnAC8ATwBGAEwAaAB0AHQAcAA6AC8ALwBiAGEAcwBp
  AGMAcgBlAGMAaQBwAGUALgBjAG8AbQBoAHQAdABwADoALwAvAHEAdQBvAHQAZQB1
  AG4AcQB1AG8AdABlAGEAcABwAHMALgBjAG8AbQBBAGwAYQBuACAARABhAGcAdQBl
  AC0ARwByAGUAZQBuAGUALAAgAFEAdQBvAHQAZQAtAFUAbgBxAHUAbwB0AGUAIABB
  AHAAcABzAFEAdQBvAHQAZQAtAFUAbgBxAHUAbwB0AGUAIABBAHAAcABzAEMAbwB1
  AHIAaQBlAHIAUAByAGkAbQBlAC0AUgBlAGcAdQBsAGEAcgBWAGUAcgBzAGkAbwBu
  ACAAMwAuADAAMQA4AEMAbwB1AHIAaQBlAHIAIABQAHIAaQBtAGUAIABSAGUAZwB1
  AGwAYQByADMALgAwADEAOAA7AFEAVQBRAEEAOwBDAG8AdQByAGkAZQByAFAAcgBp
  AG0AZQAtAFIAZQBnAHUAbABhAHIAUgBlAGcAdQBsAGEAcgBDAG8AdQByAGkAZQBy
  ACAAUAByAGkAbQBlAEMAbwBwAHkAcgBpAGcAaAB0ACAAMgAwADEANQAgAFQAaABl
  ACAAQwBvAHUAcgBpAGUAcgAgAFAAcgBpAG0AZQAgAFAAcgBvAGoAZQBjAHQAIABB
  AHUAdABoAG8AcgBzACAAKABoAHQAdABwAHMAOgAvAC8AZwBpAHQAaAB1AGIALgBj
  AG8AbQAvAHEAdQBvAHQAZQB1AG4AcQB1AG8AdABlAGEAcABwAHMALwBDAG8AdQBy
  AGkAZQByAFAAcgBpAG0AZQApAC4EzACVBMwAAATMAAAEzAAABMwB6QTMAP8EzAA8
  BMwAswTMADIEzACTBMwB5QTMASkEzAFrBMwAvwTMAKoEzAF0BMwAqgTMAd8EzADG
  BMwAvATMANwEzAC7BMwAvwTMAJMEzAC8BMwAyQTMAOUEzADOBMwAwATMAd8EzAGI
  BMwAfQTMAKoEzACvBMwA/gTMADIEzAAKBMwAUATMAHYEzABQBMwAUATMAFAEzABi
  BMwAUATMAMgEzABzBMwAUATMAFAEzAAeBMwARgTMAFgEzABQBMwAWATMAFAEzACe
  BMwAegTMAEYEzAAKBMz/9gTMADIEzAA8BMwApwTMAUoEzADGBMwBZgTMAOgEzP/k
  BMwBOQTMAIcEzAAlBMwAfwTMAH8EzACSBMwAuwTMAH8EzABNBMwAuwTMAL4EzABD
  BMwAsQTM//wEzABNBMwAhATMACUEzAB/BMwAkwTMALMEzAB1BMwASATMADIEzP/2
  BMwARgTMADIEzACyBMwAsQTMAhsEzADuBMwAlgTMAekEzAB/BMwAywTMAG8EzAA8
  BMwCGwTMALMEzAE1BMwAJATMAPIEzACMBMwAhATMASIEzAD2BMwAqgTMASAEzAEu
  BMwBoQTMANoEzACDBMwB3wTMAV8EzAE0BMwA6wTM//sEzP/7BMwAFATMAQYEzAAK
  BMwACgTMAAoEzAAKBMwACgTMAAoEzAAABMwAdgTMAFAEzABQBMwAUATMAFAEzADI
  BMwAyATMAMgEzADIBMwAMgTMAEYEzABYBMwAWATMAFgEzABYBMwAWATMAOkEzABY
  BMwARgTMAEYEzABGBMwARgTMADwEzABuBMwAKATMAIcEzACHBMwAhwTMAIcEzACH
  BMwAhwTMAEsEzAB/BMwAkgTMAJIEzACSBMwAkgTMALsEzAC7BMwAuwTMALsEzACM
  BMwATQTMAIQEzACEBMwAhATMAIQEzACEBMwAqgTMAFQEzABIBMwASATMAEgEzABI
  BMwAMgTMACUEzAAyBMwACgTMAIcEzAAKBMwAhwTMAAoEzACHBMwAdgTMAH8EzAB2
  BMwAfwTMAHYEzAB/BMwAdgTMAH8EzABQBMwAfwTMAFAEzACVBMwAUATMAJIEzABQ
  BMwAkgTMAFAEzACSBMwAUATMAJIEzABiBMwAfwTMAGIEzAB/BMwAYgTMAH8EzABi
  BMwAfwTMAFAEzABNBMwAHgTMABQEzADIBMwAuwTMAMgEzAC7BMwAyATMABQEzAA5
  BMwAcwTMAL4EzABQBMwAQwTMAFAEzACxBMwAUATMALEEzABQBMwAkwTMADwEzACx
  BMwARgTMAE0EzABGBMwATQTMAEYEzABNBMwAWATMAIQEzABYBMwAhATMAD4EzABG
  BMwAUATMAJMEzABQBMwAkwTMAFAEzACTBMwAngTMALMEzACeBMwAswTMAJ4EzACz
  BMwAngTMALMEzAB6BMwAdQTMAHoEzAB1BMwARgTMAEgEzABGBMwASATMAEYEzABI
  BMwARgTMAEgEzABGBMwASATMADwEzACnBMwAsgTMAKcEzACyBMwApwTMALIEzAAh
  BMwAngTMALMEzAC+BMwBJwTMAScEzAEeBMwCBwTMAXAEzAGbBMwBDgTMAT0EzABi
  BMwAqgTM/+IEzAGmBMwBtQTMAbUEzACxBMwAwATMAMAEzAEiBMwBIgTMAX4EzABt
  BMwAMgTMAYkEzAGNBMwAbwTMADwEzABRBMwApwTMAJMEzADDBMwApQTMAKoEzAB0
  BMwAHATMAAUEzACWBMwAqgTMAKoEzACqBMwAzQTMACoEzAA5BMwAegTMAHUEzABQ
  BMwAyATMAMgEzABQBMwARgTMAFgEzAB6BMwARgTM//YEzP/2BMz/9gTM//YEzAA8
  BMwAPATMAJIEzAC7BMwAuwTMALsEzACTBMwAYQTMAIQEzAB1BMwASATM//YEzP/2
  BMz/9gTM//YEzAAyBMwAMgTMAPIEzADcBMwAqgTMAJkEzACdBMwAAATMAFAEzAAo
  BMz/4gTMAMMEzADaBMwBngTMANYAAP0JAAD9CQTMAaEBHgD6AScBXwEnATUCBwE5
  AT0BIgGbAXABDgAAAAIAAAAAAAD/RwCCAAAAAQAAAAAAAAAAAAAAAAAAAAABkAAA
  AQIAAgADAAQABQAGAAcACAAJAAoACwAMAA0ADgAPABAAEQASABMAFAAVABYAFwAY
  ABkAGgAbABwAHQAeAB8AIAAhACIAIwAkACUAJgAnACgAKQAqACsALAAtAC4ALwAw
  ADEAMgAzADQANQA2ADcAOAA5ADoAOwA8AD0APgA/AEAAQQBCAEMARABFAEYARwBI
  AEkASgBLAEwATQBOAE8AUABRAFIAUwBUAFUAVgBXAFgAWQBaAFsAXABdAF4AXwBg
  AGEAowCEAIUAvQCWAOgAhgCOAIsAnQCkAIoA2gCDAJMBAwEEAI0BBQCIAMMA3gEG
  AJ4A9QD0APYAogCtAMkAxwCuAGIAYwCQAGQAywBlAMgAygDPAMwAzQDOAOkAZgDT
  ANAA0QCvAGcA8ACRANYA1ADVAGgA6wDtAIkAagBpAGsAbQBsAG4AoABvAHEAcABy
  AHMAdQB0AHYAdwDqAHgAegB5AHsAfQB8ALgAoQB/AH4AgACBAOwA7gC6AQcBCAEJ
  AQoBCwEMAP0A/gENAQ4BDwEQAP8BAAERARIBEwEBARQBFQEWARcBGAEZARoBGwEc
  AR0A+AD5AR4BHwEgASEBIgEjASQBJQEmAScBKAEpAPoBKgErASwBLQEuAS8BMAEx
  ATIBMwE0ATUA4gDjATYBNwE4ATkBOgE7ATwBPQE+AT8AsACxAUABQQFCAUMBRAFF
  AUYBRwFIAUkA+wD8AOQA5QFKAUsBTAFNAU4BTwFQAVEBUgFTAVQBVQFWAVcAuwFY
  AVkBWgFbAOYA5wCmAVwBXQFeANgA4QDbANwA3QDgANkA3wCbALIAswC2ALcAxAC0
  ALUAxQCCAMIAhwCrAMYAvgC/ALwAjAFfAJgBYACaAJkA7wClAJIAnACnAI8AlACV
  ALkAwADBAWEBYgFjAWQBZQFmAWcBaAFpAWoBawFsAW0BbgFvAXABcQDXAXIBcwF0
  AXUBdgF3AXgBeQF6AXsBfAF9AX4BfwGAAYEAqQCqAYIBgwD3AYQBhQGGAYcBiAGJ
  AYoBiwGMAY0BjgGPAZABkQGSAZMBlAGVAZYBlwGYBE5VTEwHdW5pMDBCMgd1bmkw
  MEIzB3VuaTAzQkMHdW5pMDBCOQdBbWFjcm9uB2FtYWNyb24GQWJyZXZlBmFicmV2
  ZQdBb2dvbmVrB2FvZ29uZWsLQ2NpcmN1bWZsZXgLY2NpcmN1bWZsZXgKQ2RvdGFj
  Y2VudApjZG90YWNjZW50BkRjYXJvbgZkY2Fyb24GRGNyb2F0B0VtYWNyb24HZW1h
  Y3JvbgpFZG90YWNjZW50CmVkb3RhY2NlbnQHRW9nb25lawdlb2dvbmVrBkVjYXJv
  bgZlY2Fyb24LR2NpcmN1bWZsZXgLZ2NpcmN1bWZsZXgKR2RvdGFjY2VudApnZG90
  YWNjZW50B3VuaTAxMjIHdW5pMDEyMwtIY2lyY3VtZmxleAtoY2lyY3VtZmxleARI
  YmFyBGhiYXIHSW1hY3JvbgdpbWFjcm9uB0lvZ29uZWsHaW9nb25lawJJSgJpagtK
  Y2lyY3VtZmxleAtqY2lyY3VtZmxleAd1bmkwMTM2B3VuaTAxMzcGTGFjdXRlBmxh
  Y3V0ZQd1bmkwMTNCB3VuaTAxM0MGTGNhcm9uBmxjYXJvbgZOYWN1dGUGbmFjdXRl
  B3VuaTAxNDUHdW5pMDE0NgZOY2Fyb24GbmNhcm9uB09tYWNyb24Hb21hY3Jvbg1P
  aHVuZ2FydW1sYXV0DW9odW5nYXJ1bWxhdXQGUmFjdXRlBnJhY3V0ZQd1bmkwMTU2
  B3VuaTAxNTcGUmNhcm9uBnJjYXJvbgZTYWN1dGUGc2FjdXRlC1NjaXJjdW1mbGV4
  C3NjaXJjdW1mbGV4B3VuaTAyMUEHdW5pMDIxQgZUY2Fyb24GdGNhcm9uB1VtYWNy
  b24HdW1hY3JvbgZVYnJldmUGdWJyZXZlBVVyaW5nBXVyaW5nDVVodW5nYXJ1bWxh
  dXQNdWh1bmdhcnVtbGF1dAdVb2dvbmVrB3VvZ29uZWsGWmFjdXRlBnphY3V0ZQpa
  ZG90YWNjZW50Cnpkb3RhY2NlbnQHdW5pMDIxOAd1bmkwMjE5B3VuaTAyMzcHdW5p
  MDNBOQd1bmkwMzk0B3VuaTAxNjIHdW5pMDE2MwZFYnJldmUGSWJyZXZlBkl0aWxk
  ZQRMZG90A0VuZwZPYnJldmUEVGJhcgZVdGlsZGUGV2FjdXRlC1djaXJjdW1mbGV4
  CVdkaWVyZXNpcwZXZ3JhdmULWWNpcmN1bWZsZXgGWWdyYXZlBmVicmV2ZQZpYnJl
  dmUGaXRpbGRlBGxkb3QDZW5nBm9icmV2ZQR0YmFyBnV0aWxkZQZ3YWN1dGULd2Np
  cmN1bWZsZXgJd2RpZXJlc2lzBndncmF2ZQt5Y2lyY3VtZmxleAZ5Z3JhdmUHdW5p
  MjA3NAd1bmkwMEFEB3VuaTIwMTEHdW5pMDBBMARFdXJvB3VuaTIwQTkHdW5pMjIx
  NQd1bmkwMEI1Bm1pbnV0ZQZzZWNvbmQHdW5pMDMyNgx1bmkwMzI2LmNhc2UKYWN1
  dGUuY2FzZQpicmV2ZS5jYXNlCWNhcm9uLmFsdApjYXJvbi5jYXNlDGNlZGlsbGEu
  Y2FzZQ9jaXJjdW1mbGV4LmNhc2UNZGllcmVzaXMuY2FzZQ5kb3RhY2NlbnQuY2Fz
  ZQpncmF2ZS5jYXNlEWh1bmdhcnVtbGF1dC5jYXNlC21hY3Jvbi5jYXNlC29nb25l
  ay5jYXNlCXJpbmcuY2FzZQp0aWxkZS5jYXNlALAALCCwAFVYRVkgIEu4AA5RS7AG
  U1pYsDQbsChZYGYgilVYsAIlYbkIAAgAY2MjYhshIbAAWbAAQyNEsgABAENgQi2w
  ASywIGBmLbACLCMhIyEtsAMsIGSzAxQVAEJDsBNDIGBgQrECFENCsSUDQ7ACQ1R4
  ILAMI7ACQ0NhZLAEUHiyAgICQ2BCsCFlHCGwAkNDsg4VAUIcILACQyNCshMBE0Ng
  QiOwAFBYZVmyFgECQ2BCLbAELLADK7AVQ1gjISMhsBZDQyOwAFBYZVkbIGQgsMBQ
  sAQmWrIoAQ1DRWNFsAZFWCGwAyVZUltYISMhG4pYILBQUFghsEBZGyCwOFBYIbA4
  WVkgsQENQ0VjRWFksChQWCGxAQ1DRWNFILAwUFghsDBZGyCwwFBYIGYgiophILAK
  UFhgGyCwIFBYIbAKYBsgsDZQWCGwNmAbYFlZWRuwAiWwDENjsABSWLAAS7AKUFgh
  sAxDG0uwHlBYIbAeS2G4EABjsAxDY7gFAGJZWWRhWbABK1lZI7AAUFhlWVkgZLAW
  QyNCWS2wBSwgRSCwBCVhZCCwB0NQWLAHI0KwCCNCGyEhWbABYC2wBiwjISMhsAMr
  IGSxB2JCILAII0KwBkVYG7EBDUNFY7EBDUOwA2BFY7AFKiEgsAhDIIogirABK7Ew
  BSWwBCZRWGBQG2FSWVgjWSFZILBAU1iwASsbIbBAWSOwAFBYZVktsAcssAlDK7IA
  AgBDYEItsAgssAkjQiMgsAAjQmGwAmJmsAFjsAFgsAcqLbAJLCAgRSCwDkNjuAQA
  YiCwAFBYsEBgWWawAWNgRLABYC2wCiyyCQ4AQ0VCKiGyAAEAQ2BCLbALLLAAQyNE
  sgABAENgQi2wDCwgIEUgsAErI7AAQ7AEJWAgRYojYSBkILAgUFghsAAbsDBQWLAg
  G7BAWVkjsABQWGVZsAMlI2FERLABYC2wDSwgIEUgsAErI7AAQ7AEJWAgRYojYSBk
  sCRQWLAAG7BAWSOwAFBYZVmwAyUjYUREsAFgLbAOLCCwACNCsw0MAANFUFghGyMh
  WSohLbAPLLECAkWwZGFELbAQLLABYCAgsA9DSrAAUFggsA8jQlmwEENKsABSWCCw
  ECNCWS2wESwgsBBiZrABYyC4BABjiiNhsBFDYCCKYCCwESNCIy2wEixLVFixBGRE
  WSSwDWUjeC2wEyxLUVhLU1ixBGREWRshWSSwE2UjeC2wFCyxABJDVVixEhJDsAFh
  QrARK1mwAEOwAiVCsQ8CJUKxEAIlQrABFiMgsAMlUFixAQBDYLAEJUKKiiCKI2Gw
  ECohI7ABYSCKI2GwECohG7EBAENgsAIlQrACJWGwECohWbAPQ0ewEENHYLACYiCw
  AFBYsEBgWWawAWMgsA5DY7gEAGIgsABQWLBAYFlmsAFjYLEAABMjRLABQ7AAPrIB
  AQFDYEItsBUsALEAAkVUWLASI0IgRbAOI0KwDSOwA2BCILAUI0IgYLABYbcYGAEA
  EQATAEJCQopgILAUQ2CwFCNCsRQIK7CLKxsiWS2wFiyxABUrLbAXLLEBFSstsBgs
  sQIVKy2wGSyxAxUrLbAaLLEEFSstsBsssQUVKy2wHCyxBhUrLbAdLLEHFSstsB4s
  sQgVKy2wHyyxCRUrLbArLCMgsBBiZrABY7AGYEtUWCMgLrABXRshIVktsCwsIyCw
  EGJmsAFjsBZgS1RYIyAusAFxGyEhWS2wLSwjILAQYmawAWOwJmBLVFgjIC6wAXIb
  ISFZLbAgLACwDyuxAAJFVFiwEiNCIEWwDiNCsA0jsANgQiBgsAFhtRgYAQARAEJC
  imCxFAgrsIsrGyJZLbAhLLEAICstsCIssQEgKy2wIyyxAiArLbAkLLEDICstsCUs
  sQQgKy2wJiyxBSArLbAnLLEGICstsCgssQcgKy2wKSyxCCArLbAqLLEJICstsC4s
  IDywAWAtsC8sIGCwGGAgQyOwAWBDsAIlYbABYLAuKiEtsDAssC8rsC8qLbAxLCAg
  RyAgsA5DY7gEAGIgsABQWLBAYFlmsAFjYCNhOCMgilVYIEcgILAOQ2O4BABiILAA
  UFiwQGBZZrABY2AjYTgbIVktsDIsALEAAkVUWLEOBkVCsAEWsDEqsQUBFUVYMFkb
  IlktsDMsALAPK7EAAkVUWLEOBkVCsAEWsDEqsQUBFUVYMFkbIlktsDQsIDWwAWAt
  sDUsALEOBkVCsAFFY7gEAGIgsABQWLBAYFlmsAFjsAErsA5DY7gEAGIgsABQWLBA
  YFlmsAFjsAErsAAWtAAAAAAARD4jOLE0ARUqIS2wNiwgPCBHILAOQ2O4BABiILAA
  UFiwQGBZZrABY2CwAENhOC2wNywuFzwtsDgsIDwgRyCwDkNjuAQAYiCwAFBYsEBg
  WWawAWNgsABDYbABQ2M4LbA5LLECABYlIC4gR7AAI0KwAiVJiopHI0cjYSBYYhsh
  WbABI0KyOAEBFRQqLbA6LLAAFrAXI0KwBCWwBCVHI0cjYbEMAEKwC0MrZYouIyAg
  PIo4LbA7LLAAFrAXI0KwBCWwBCUgLkcjRyNhILAGI0KxDABCsAtDKyCwYFBYILBA
  UVizBCAFIBuzBCYFGllCQiMgsApDIIojRyNHI2EjRmCwBkOwAmIgsABQWLBAYFlm
  sAFjYCCwASsgiophILAEQ2BkI7AFQ2FkUFiwBENhG7AFQ2BZsAMlsAJiILAAUFiw
  QGBZZrABY2EjICCwBCYjRmE4GyOwCkNGsAIlsApDRyNHI2FgILAGQ7ACYiCwAFBY
  sEBgWWawAWNgIyCwASsjsAZDYLABK7AFJWGwBSWwAmIgsABQWLBAYFlmsAFjsAQm
  YSCwBCVgZCOwAyVgZFBYIRsjIVkjICCwBCYjRmE4WS2wPCywABawFyNCICAgsAUm
  IC5HI0cjYSM8OC2wPSywABawFyNCILAKI0IgICBGI0ewASsjYTgtsD4ssAAWsBcj
  QrADJbACJUcjRyNhsABUWC4gPCMhG7ACJbACJUcjRyNhILAFJbAEJUcjRyNhsAYl
  sAUlSbACJWG5CAAIAGNjIyBYYhshWWO4BABiILAAUFiwQGBZZrABY2AjLiMgIDyK
  OCMhWS2wPyywABawFyNCILAKQyAuRyNHI2EgYLAgYGawAmIgsABQWLBAYFlmsAFj
  IyAgPIo4LbBALCMgLkawAiVGsBdDWFAbUllYIDxZLrEwARQrLbBBLCMgLkawAiVG
  sBdDWFIbUFlYIDxZLrEwARQrLbBCLCMgLkawAiVGsBdDWFAbUllYIDxZIyAuRrAC
  JUawF0NYUhtQWVggPFkusTABFCstsEMssDorIyAuRrACJUawF0NYUBtSWVggPFku
  sTABFCstsEQssDsriiAgPLAGI0KKOCMgLkawAiVGsBdDWFAbUllYIDxZLrEwARQr
  sAZDLrAwKy2wRSywABawBCWwBCYgICBGI0dhsAwjQi5HI0cjYbALQysjIDwgLiM4
  sTABFCstsEYssQoEJUKwABawBCWwBCUgLkcjRyNhILAGI0KxDABCsAtDKyCwYFBY
  ILBAUVizBCAFIBuzBCYFGllCQiMgR7AGQ7ACYiCwAFBYsEBgWWawAWNgILABKyCK
  imEgsARDYGQjsAVDYWRQWLAEQ2EbsAVDYFmwAyWwAmIgsABQWLBAYFlmsAFjYbAC
  JUZhOCMgPCM4GyEgIEYjR7ABKyNhOCFZsTABFCstsEcssQA6Ky6xMAEUKy2wSCyx
  ADsrISMgIDywBiNCIzixMAEUK7AGQy6wMCstsEkssAAVIEewACNCsgABARUUEy6w
  NiotsEossAAVIEewACNCsgABARUUEy6wNiotsEsssQABFBOwNyotsEwssDkqLbBN
  LLAAFkUjIC4gRoojYTixMAEUKy2wTiywCiNCsE0rLbBPLLIAAEYrLbBQLLIAAUYr
  LbBRLLIBAEYrLbBSLLIBAUYrLbBTLLIAAEcrLbBULLIAAUcrLbBVLLIBAEcrLbBW
  LLIBAUcrLbBXLLMAAABDKy2wWCyzAAEAQystsFksswEAAEMrLbBaLLMBAQBDKy2w
  WyyzAAABQystsFwsswABAUMrLbBdLLMBAAFDKy2wXiyzAQEBQystsF8ssgAARSst
  sGAssgABRSstsGEssgEARSstsGIssgEBRSstsGMssgAASCstsGQssgABSCstsGUs
  sgEASCstsGYssgEBSCstsGcsswAAAEQrLbBoLLMAAQBEKy2waSyzAQAARCstsGos
  swEBAEQrLbBrLLMAAAFEKy2wbCyzAAEBRCstsG0sswEAAUQrLbBuLLMBAQFEKy2w
  byyxADwrLrEwARQrLbBwLLEAPCuwQCstsHEssQA8K7BBKy2wciywABaxADwrsEIr
  LbBzLLEBPCuwQCstsHQssQE8K7BBKy2wdSywABaxATwrsEIrLbB2LLEAPSsusTAB
  FCstsHcssQA9K7BAKy2weCyxAD0rsEErLbB5LLEAPSuwQistsHossQE9K7BAKy2w
  eyyxAT0rsEErLbB8LLEBPSuwQistsH0ssQA+Ky6xMAEUKy2wfiyxAD4rsEArLbB/
  LLEAPiuwQSstsIAssQA+K7BCKy2wgSyxAT4rsEArLbCCLLEBPiuwQSstsIMssQE+
  K7BCKy2whCyxAD8rLrEwARQrLbCFLLEAPyuwQCstsIYssQA/K7BBKy2whyyxAD8r
  sEIrLbCILLEBPyuwQCstsIkssQE/K7BBKy2wiiyxAT8rsEIrLbCLLLILAANFUFiw
  BhuyBAIDRVgjIRshWVlCK7AIZbADJFB4sQUBFUVYMFktAAAAAAMAlf7lBEsFKgAP
  ABMAOQBXQFQ2LSMZBAYEAUwFAQQCBgIEBoAKBwIGAwIGA34IAQEAAgQBAmcJAQMA
  AANXCQEDAwBfAAADAE8UFBAQAAAUORQ4NDIoJh8eEBMQExIRAA8ADTULBhcrABYV
  AxQGIyEiJjUTNDYzIQMTIQM2JjU0NxMDJjU0NjMyFhcTEzY2MzIWFRQHAxMWFRQG
  IyInAwMGIwQuHQMdIvzLIh0DHSIDNS0C/SACkyQD1tYCIhUSGQWiogUZEhUiAtbW
  AyQVJgmiogkmBSofJfpDJR8fJQW9JR/6IQV5+of2EQ0EBgGaAZgDBw4SCwr+swFN
  CgsSDgcD/mj+ZgYEDRETAU3+sxMAAgHp//YC4wT1AA4AHABVtwoDAgMAAQFMS7AX
  UFhAFwAAAAFhBAEBASRNBQEDAwJhAAICIwJOG0AVBAEBAAADAQBpBQEDAwJhAAIC
  IwJOWUASDw8AAA8cDxsWFAAOAAwlBggXKwAWBwMGBiMiJicDJjYzMxIWFRUUBiMi
  JjU1NDYzAr4UAjECHRoaHwEwAhQXggE7O0JCOztCBPUYGv09FxkZFwLDGhj8GR0i
  miIdHSKaIh3//wD/AssDzQT1ACMACv8aAAAAAwAKAOYAAAAAAAIAPP/qBJAEuQBL
  AE8AWEBVRzwCCQohFgIDAgJMEA0LAwkOCAIAAQkAaBEPBwMBBgQCAgMBAmcMAQoK
  KE0FAQMDKQNOTEwAAExPTE9OTQBLAEpFQ0A/Ojg1MyEkJSMVIyQhJBIIHysAFhUU
  BiMjBzMyFhUUBiMjAwYGIyImNTQ3EyEDBgYjIiY1NDcTIyImNTQ2MzM3IyImNTQ2
  MzMTNjYzMhYVFAcDIRM2NjMyFhUUBwMzATchBwRzHR0iwkC8Ih0dIuJTBB8THCwC
  S/76UwQfExwsAkugIh0dIsVAvyIdHSLkUQQfExwsAkgBBVEEHxMcLAJInf55QP77
  QANhIScnIfUhJych/r8QER4YAwoBH/6/EBEeGAMKAR8hJych9SEnJyEBNxARHhgD
  Cv7rATcQER4YAwr+6/579fUAAAMAs/+DBBoFIABHAFAAWQClQBsFAwIIABQBAQhY
  TzoVBAUBOQEJBSgmAgIJBUxLsCBQWEAsCwEIAQAIWQYBAAABBQABaQAFCQIFWQwB
  CQQBAgMJAmkAAwMHYQoBBwckA04bQDIKAQcAAwdZCwEIAQAIWQYBAAABBQABaQAF
  CQIFWQwBCQQBAgMJAmkKAQcHA2EAAwcDUVlAHFFRSEgAAFFZUVlIUEhQAEcARh4l
  KCMcJSgNCB0rABYVFRYXNTQ2MzIWFRUUBiMiJyYnFRYXFhYVFAYGBxUUBiMiJjU1
  JicVFAYjIiY1NTQ2MzIWFxYWFxEmJyYmNTQ2NjM1NDYzAgYVFBYXFhc1EjY1NCYn
  JicRAoUhX1EiKSkiIikiDjyPf0xQWVendiElJSF8VSIpKSIiKRUYCRxxWYJGSVFb
  oWYhJaNnKSgjUPRuLCksVQUgHyKuGEktIx4eI74jHhp0G/cOHB1uWliFTAKyIh8f
  Ir0ZVTgjHh4j8CMeExZLVg8BFxAdHWdTV31AoSIf/otFPCAoDQwL7/1fU0IiLA4P
  Cv7xAAAFADL/6gSaBLkADwAhADEAQQBRAGJAXwACAQUBAgWAAAMIBggDBoAABAAA
  BwQAaQwBBw0BCQgHCWkLAQUFAWEKAQEBKE0ACAgGYQAGBikGTkJCMjIiIgAAQlFC
  UEpIMkEyQDo4IjEiMCooGxkSEAAPAA4mDggXKwAWFhUUBgYjIiYmNTQ2NjMEMzIX
  FhUUBwEGIyInJjU0NwEkBgYVFBYWMzI2NjU0JiYjABYWFRQGBiMiJiY1NDY2Mw4C
  FRQWFjMyNjY1NCYmIwGOfkpKfkpKfkpKfkoCvRcaGBkY/JYWFxoYGRgDav0yQicn
  QicnQicnQicCjn5KSn5KSn5KSn5KJ0InJ0InJ0InJ0InBLlKfkpKfkpKfkpKfkqA
  GxsWFxf8whYbGxYYFgM+FCdCJydCJydCJydCJ/3XSn5KSn5KSn5KSn5KgidCJydC
  JydCJydCJwAAAgCT/+oEbQS5AD4ASADuS7AxUFhAGAsBAAE4AQIASAEDAkcjFQME
  Ay8BBQQFTBtAGAsBAAE4AQIASAEDAkcjFQMEAy8BCAQFTFlLsBdQWEAoAAABAgEA
  AoAAAgADBAIDaQABAQdhCQEHByhNCAEEBAVhBgEFBSMFThtLsDFQWEAyAAABAgEA
  AoAAAgADBAIDaQABAQdhCQEHByhNCAEEBAVhAAUFI00IAQQEBmEABgYpBk4bQDAA
  AAECAQACgAACAAMEAgNpAAEBB2EJAQcHKE0ABAQFYQAFBSNNAAgIBmEABgYpBk5Z
  WUASAABGRAA+AD0jNCMkOiQmCggdKwAXFhUVFAYjIiY1NSYjIgYGFRQWFwE2NzYz
  MzIWFRQGIyMGBxczMhYVFAYjIyInJwYjIiYmNTQ2NyY1NDY2MwIGFRQWFjMyNwEC
  5JcVIikpIkxtN1EqKSoBJSggDCidIh0dIl0kMm1UIh0dInIwHleDrmmZUWZdY1OY
  ZNQ9LlI1dlv++wS5aA8nfyMeHiNaLy5OLzRZL/62WG0qHyUlH3pfeh8lJR8hYZha
  l1tlnkF0jFmSVP0ra0M0VDBwASYAAQHlAssC5wT1AAwANkuwF1BYQAwAAAABXwIB
  AQEkAE4bQBICAQEAAAFXAgEBAQBhAAABAFFZQAoAAAAMAAokAwgXKwAHAwYGIyIm
  JwMmMzMC5wY3AyMeHSQDNwYvpAT1Mv4+GhwcGgHCMgAAAQEp/qkDYQVlAB8AH7MB
  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
  A0wKAQIBS0uwJFBYQCcAAQAEAwEEaQACBQEDAgNlCgEICAZhCQEGBihNAAcHAGEA
  AAAjAE4bS7AmUFhAJQAHAAABBwBpAAEABAMBBGkAAgUBAwIDZQoBCAgGYQkBBgYo
  CE4bQCoABQMFhgAHAAABBwBpAAEABAMBBGkAAgADBQIDaQoBCAgGYQkBBgYoCE5Z
  WUAXOjoAADpJOkhCQAA5ADgxJS0jIyYLCBwrABYSFRQCBiMiJwc2MzIWFxYzMjY3
  NjMyFhcWFRQHBgYjIiYmJyYmIyIHBiMiJyY1NDc3JgI1NBI2Mw4CFRQWFjMyNjY1
  NCYmIwMC74OD75wcGIFRTyA5K0UnKE0rCQoPHwwRFjpnMxo7JQg0RShsdQcIISMa
  CbSar4PvnG+mW1umb2+mW1umbwS5kf70srL+9ZEChyAICQ8aHwYYFB0WGhArJAgH
  AgsKMQMuIhkOC8w6ASPPsgEMkZRqyImJyGlpyImJyGoAAgBQAAAEpASjADwARAA/
  QDwGAQIIAUwACAACAAgCaQkBBgYHXwoBBwciTQUDAgAAAWEEAQEBIwFOAABEQj89
  ADwAOiEkNCEpND4LCB0rABYWFRQGBxYXFhYXFhcWMzMyFhUUBiMjIiYnJicmJicm
  JiMjETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzIQMzIDU0JiMjAwazXZSBOCUfLBsc
  DyczHCIdHSJIPFMnFiAeJRoeVDuIgiIdHSL+biIdHSJ6eiIdHSIB+urLAQ6IfNUE
  o1SYZXKeHRYxKVE7PRxIHyUlHz9MLEhCSSQqK/6FHyUlHx8lJR8Dkx8lJR/96Mdg
  aQAAAQCe/+oEKQS5AEsAUUBORwEBBiEBAgUCTAABAQZhCAcCBgYoTQAAAAZhCAcC
  BgYoTQAEBAJhAwECAilNAAUFAmEDAQICKQJOAAAASwBKRUMyMC0rJiQfHSMlCQgY
  KwAWFRUUBiMiJyYmIyIGFRQWFxYWFxYWFxYWFRQGBiMiJicVFAYjIiY1ETQ2MzIX
  FhYzMjY1NCYnJiYnJiYnJiY1NDY2MzIWFzU0NjMD2CIiKSYOMK5vbnkqJyNeT1Zl
  MWRxYr+GZKs/IikpIiIpKw8ps4OAiT88JlpOUm8vUFljsXFYpDoiKQS5HiPmIx4a
  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
  BwQBTEuwF1BYQCQKCAIEBAVhCQYCBQUlTQAHBwBhAAAAKU0DAQEBAl8AAgInAk4b
  S7AxUFhALwoIAgQEBmEJAQYGK00KCAIEBAVfAAUFJU0ABwcAYQAAAClNAwEBAQJf
  AAICJwJOG0AsCgEICAZhCQEGBitNAAQEBV8ABQUlTQAHBwBhAAAAKU0DAQEBAl8A
  AgInAk5ZWUAXKioAACo5KjgyMAApACg0ISQ0IiYLCBwrABYWFRQGBiMiJxEzMhYV
  FAYjISImNTQ2MzMRIyImNTQ2MzMyFhUVNjYzDgIVFBYWMzI2NjU0JiYjAxnEcHDE
  fLyBrCIdHSL+WCIdHSJmUiIdHSKfIh0/pmJji09Pi1lZgENDgFkDsnXblJTbdaX+
  dR8lJR8fJSUfBBAfJSUfHyVQUliUUJhoaJhQVZhjY5hVAAACAH/+fASnA7IAKQA5
  ALW2HwICBwEBTEuwF1BYQCQKCAIBAQBhCQYCAAAlTQAHBwVhAAUFKU0EAQICA18A
  AwMnA04bS7AxUFhALwoIAgEBBmEJAQYGK00KCAIBAQBfAAAAJU0ABwcFYQAFBSlN
  BAECAgNfAAMDJwNOG0AsCgEICAZhCQEGBitNAAEBAF8AAAAlTQAHBwVhAAUFKU0E
  AQICA18AAwMnA05ZWUAXKioAACo5KjgyMAApACgiJDQhJDULCBwrABYXNTQ2MzMy
  FhUUBiMjETMyFhUUBiMhIiY1NDYzMxEGIyImJjU0NjYzDgIVFBYWMzI2NjU0JiYj
  ApGmPx0inyIdHSJSZiIdHSL+WCIdHSKsgbx8xHBwxHxPgENDgFlZi09Pi1kDslhS
  UCUfHyUlH/vwHyUlHx8lJR8Bi6V125SU23WUVZhjY5hVUJhoaJhQAAABAJMAAARS
  A7IAMAB2QAoDAQEGLAECAAJMS7AXUFhAIQAAAQIBAAKABQEBAQZhCAcCBgYlTQQB
  AgIDXwADAyMDThtAKwAAAQIBAAKABQEBAQdhCAEHBytNBQEBAQZfAAYGJU0EAQIC
  A18AAwMjA05ZQBAAAAAwAC80ISQ0JCMWCQgdKwAXFhUUBwYjIicmIyIGBhUVITIW
  FRQGIyEiJjU0NjMzESMiJjU0NjMzMhYVFT4CMwPmRCgJFSUPDTE4WrZ1AVEiHR0i
  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
  JiYjIgcGIyInJjU0NzY2NTQnIyImNTQ2MzMnJiY1NDY2MwLEpEUVIikpIk51N1Qs
  HR4YEgE2Ih0dIv7qAY5GRCA3KD4kSk0JCg4eDBALCjplMBszKzJCJmh1CQggHRoM
  b1sDjSIdHSJfEiQkVZtkBLk3MQ8nfyMeHiNaLy9RMSpOOiwqHyUlHwwXsI0ZCgkP
  OAYUExcYDRcHKyUJCQsKMQMlIB0TDGWcVhgZHyUlHyNJYjpclFUAAgBvAGMEXQRR
  ADcARwBJQEYpJQIHBDczGxcEBgcNCQIBBgNMBQEDBAADWQAEAAcGBAdpAAYAAQAG
  AWkFAQMDAGECAQADAFFEQjw6LSsoJiMhIyMlCAgZKyUWFRQHBiMiJycGIyInBwYj
  IicmNTQ3NyY1NDcnJjU0NzYzMhcXNjMyFzc2MzIXFhUUBwcWFRQHJBYWMzI2NjU0
  JiYjIgYGFQRGFx0dFxUXj2eEhGePFxUXHR0XjkhIjhcdHRcVF49nhIRnjxcVFx0d
  F45ISP2oQndNTXdCQndNTXdC4BcVFx0dF49DQ48XHR0XFReOZoaGZo4XFRcdHReP
  Q0OPFx0dFxUXjmaGhmaheENDeEtLeENDeEsAAQA8AAAEkASjAFQAWEBVSwEDAgFM
  CwEBCgECAwECZwkBAwgBBAUDBGcPDgwDAAANXxEQAg0NIk0HAQUFBl8ABgYjBk4A
  AABUAFJOTEpIREE9Ozo4NDIxLyEkNCEkISQhJBIIHysAFhUUBiMjBzMyFhUUBiMj
  ByEyFhUUBiMhFTMyFhUUBiMhIiY1NDYzMzUhIiY1NDYzIScjIiY1NDYzMycjIiY1
  NDYzITIWFRQGIyMTEyMiJjU0NjMhBHMdHSJEkHoiHR0iz2wBJyIdHSL+zuIiHR0i
  /aYiHR0i4v7OIh0dIgEnbM8iHR0ie49GIh0dIgFOIh0dIl36/EEiHR0iATAEox8l
  JR/nHyUlH64fJSUf7h8lJR8fJSUf7h8lJR+uHyUlH+cfJSUfHyUlH/5nAZkfJSUf
  AAICG/6dArEFcgANABsAUkuwIFBYQBcAAAABYQQBAQEqTQUBAwMCYQACAicCThtA
  GwQBAQAAAwEAaQUBAwICA1kFAQMDAmEAAgMCUVlAEg4OAAAOGw4aFRMADQAMJQYI
  FysAFhURFAYjIiY1ETQ2MxIWFREUBiMiJjURNDYzAo8iIikpIiIpKSIiKSkiIikF
  ch4j/akjHh4jAlcjHvwEHiP9qSMeHiMCVyMeAAACALP/GgQZBKMAPQBPAJhAC0Y2
  AgMAFwEEAwJMS7AMUFhAIAAAAQMBAHIAAwQEA3AABAACBAJkAAEBBV8GAQUFIgFO
  G0uwDlBYQCEAAAEDAQByAAMEAQMEfgAEAAIEAmQAAQEFXwYBBQUiAU4bQCIAAAED
  AQADgAADBAEDBH4ABAACBAJkAAEBBV8GAQUFIgFOWVlAEQAAAD0AOyspJiQfHCMl
  BwgYKwAWFRUUBiMiJjU1IyIVFBYXBRYWFRQGBxYVFAYGIyEiJjU1NDYzMhYVFTMy
  NTQmJyUmJjU0NjcmNTQ2NjMhAAYVFBYXBRYXNjY1NCYnJSYnA78dIikpIu+NQUEB
  JlNUREYRQH1a/qYiHSIpKSLvjUFB/tpTVENHEUB9WgFa/dAcMDQBJjktHR0wNP7a
  PikEox8lxSMeHiOBbDRVKLYzelNAZDMxNkdsPR8l2SMeHiOVbDRVKLYzelNAYzQw
  N0dsPf4aMBwoOSG2Iy0XMBwoOSG2JikAAAIBNQRPA5cFUwANABsANLEGZERAKQUD
  BAMBAAABWQUDBAMBAQBhAgEAAQBRDg4AAA4bDhoVEwANAAwlBggXK7EGAEQAFhUV
  FAYjIiY1NTQ2MyAWFRUUBiMiJjU1NDYzAcsoKDc3KCg3AdsoKDc3KCg3BVMdJIIk
  HR0kgiQdHSSCJB0dJIIkHQADACT/6gSoBLkADwAfAEsAZ7EGZERAXAAEBQcFBAeA
  AAcGBQcGfgoBAQsBAwkBA2kMAQkABQQJBWkABgAIAgYIaQACAAACWQACAgBhAAAC
  AFEgIBAQAAAgSyBKREI6ODUzLy0pKBAfEB4YFgAPAA4mDQgXK7EGAEQABBIVFAIE
  IyIkAjU0EiQzDgIVFBYWMzI2NjU0JiYjFhYXFhYVFAcGIyInJiYjIgYVFBYzMjY3
  NjMyFxYVFAYHBgYjIiYmNTQ2NjMDDQEHlJT++Kam/viUlAEHp4XQc3PQhYXQc3PQ
  hTxdKhUUBxAcDBIlQSZPZmZPJkElEgwcEAcUFSpdLVuPUFCPWwS5o/7mqqr+5qSk
  ARqqqgEao3iA4Y6O4oCA4o6O4YCYFRMKGRIQESgIEQ9xaWlxDxEIKBEQEhkKExVT
  m2pqm1MAAAIA8gHRBAkEuQAuADgAWEBVHAEIAzY1AgAIEQEBBwNMAAUEAwQFA4AJ
  AQYABAUGBGkAAwoBCAADCGkAAAABYQABATNNAAcHAmEAAgI1Ak4vLwAALzgvNzQy
  AC4ALRQkJSM0NQsJHCsAFhURFBYzMzIWFRQGIyMiJicGIyImJjU0NjMyFzU0JiMi
  BgcGIyInJjU0NzY2MwIVFBYzMjc1JiMC/pcYGhEaFxcaMTJPDIGZTnpGqoiEZk5S
  OoY+CQohEAcfQ5xL70c+k3dtcgS5hXr+1x4ZHSAfGy8sbTNkR3p2HDM+RB4aBC0U
  ESENHSD+aG8wNHVFGQAAAQCMAT4ENgNNABIAJUAiAAABAIYDAQIBAQJXAwECAgFf
  AAECAU8AAAASABAjJQQIGCsAFhURFAYjIiY1ESEiJjU0NjMhBBkdIikpIv0rIh0d
  IgMsA00fJf52Ix4eIwFGHyUlHwAABACEATQESAU2AA8AHwA9AEYAa7EGZERAYCYB
  BQgpAQQFAkwGAQQFAgUEAoAKAQELAQMHAQNpDAEHAAkIBwlpAAgABQQIBWcAAgAA
  AlkAAgIAYQAAAgBRICAQEAAARkRAPiA9IDs2NDEwLiwQHxAeGBYADwAOJg0IFyux
  BgBEABYWFRQGBiMiJiY1NDY2Mw4CFRQWFjMyNjY1NCYmIx4CFRQGBxcWFRQHBiMi
  JycjFRQGIyImNRE0NjMzAzMyNjU0JiMjAvHce3vci4vce3vci2+tYGCtb2+tYGCt
  b1BcMT86WRYSERMWEYNKGB0cFxocnGpYODg1NF8FNojqjo7riYnrjo7qiGRqvHZ3
  vGtrvHd2vGqPL1Q2PlYUYBgUEhEQFJdwHRkZHQGwHBn+7S8rKS4AAQEiBFIDqgTi
  AA0AJ7EGZERAHAIBAQAAAVcCAQEBAF8AAAEATwAAAA0ACzQDCBcrsQYARAAWFRQG
  IyEiJjU0NjMhA40dHSL99iIdHSICCgTiIScnISEnJyEAAgD2AokDJgS5AA8AHwA3
  sQZkREAsBAEBBQEDAgEDaQACAAACWQACAgBhAAACAFEQEAAAEB8QHhgWAA8ADiYG
  CBcrsQYARAAWFhUUBgYjIiYmNTQ2NjMOAhUUFhYzMjY2NTQmJiMCWoFLS4FMTIFL
  S4FMJ0MnJ0MnJ0MnJ0MnBLlLgUxMgUtLgUxMgUuHJ0MnJ0MnJ0MnJ0MnAAIAqgBy
  BCIEZgAfAC0APkA7BAEAAwEBAgABZwgBBQACBwUCaQkBBwYGB1cJAQcHBl8ABgcG
  TyAgAAAgLSArJyQAHwAeJCMjJCMKCBsrABYVFSEyFhUUBiMhFRQGIyImNTUhIiY1
  NDYzITU0NjMAFhUUBiMhIiY1NDYzIQKLHwE5Ih0dIv7HHyUlH/7HIh0dIgE5HyUB
  nx0dIv0GIh0dIgL6BGYdIv0fJSUf/SIdHSL9HyUlH/0iHfyUHyUlHx8lJR8AAQEg
  AeMDvAU2AC8AbLUiAQQDAUxLsBRQWEAkAAQDAQMEAYAAAQAAAXAAAwMFYQYBBQUy
  TQAAAAJgAAICMwJOG0AlAAQDAQMEAYAAAQADAQB+AAMDBWEGAQUFMk0AAAACYAAC
  AjMCTllADgAAAC8ALiUpNSMXBwkbKwAWFhUUBgcHITU0NjMyFhUVFAYjISI1NDcB
  NjY1NCYjIgYHFRQGIyImNTU0NzY2MwLAgURPVO8BQiAkJB8aGP3FLx8BTDk1UEoq
  VSIgJCQfFTuYSQU2P3RNTX1Gxk4aGRkalhobSCcaARgxUDE6RRUSZxoZGRqTGw8n
  KwAAAQEuAdEDngU2ADsAT0BMLgEGBQUBAwQQAQACA0wABgUEBQYEgAABAwIDAQKA
  AAQAAwEEA2kABQUHYQgBBwcyTQACAgBhAAAANQBOAAAAOwA6JCQzNCQXKgkJHSsA
  FhYVFAcWFhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIyMiNTQ2MzMyNjU0JiMiBxUU
  BiMiJjU1NDc2NjMCtoZHcEJJo55KlDsWCBIfCgkzczZaYl9ZNCwVFydUVlhOT0Qg
  JCQfFTmQRwU2PGxGeTwWZEp3hyEgDBsRFS8EGh5BPUI2PhwjOj86PR0/GhkZGm4d
  DSIjAAABAaEEDgOTBYcAEQAfsQZkREAUDgEBAAFMAAABAIUAAQF2JyACCBgrsQYA
  RAAzMhcWFRQHBQYjIicmNTQ3AQMfEyIhHhb+ihIOGBYYEAFcBYcpJx0aDdsKGRsZ
  EwwBAAABANr+cgP8A6YALQA3QDQLAQQDEAEABAJMBgUCAwMWTQAAABdNAAQEAWEA
  AQEXTQACAhgCTgAAAC0AKyU1NCU1BwcbKwAWFREUBiMjIiY1NQYGIyInERQGIyMi
  JjURNDYzMzIWFREUFjMyNjY1ETQ2MzMD2yEeJwInHj+1ZWRDISkCKSEhKQIpIVld
  TJVfISkCA6YeI/zSIx4eI49iei/+miMeHiMEsiMeHiP92lpnZq1lAW8jHgAAAQCD
  /mYEXQSjACAALEApAAQAAQAEAYACAQAABV8GAQUFIk0DAQEBLQFOAAAAIAAeEyMT
  IyQHCBsrABYVFAYjIxEUBiMiJjURIxEUBiMiJjURLgI1NDY2MyEEQB0dIkQiKSki
  oCIpKSJ1s2NpvXsB+gSjHyUlH/qMIx4eIwV0+owjHh4jA08EU5hnaptS//8B3wGp
  Au0C3wEHABEAAAGzAAmxAAG4AbOwNSsAAAAAAQFf/igDYgAcACAAfLEGZES1CgEA
  AgFMS7AKUFhAKAYBBQQDAgVyAAEDAgMBAoAABAADAQQDaQACAAACWQACAgBiAAAC
  AFIbQCkGAQUEAwQFA4AAAQMCAwECgAAEAAMBBANpAAIAAAJZAAICAGIAAAIAUllA
  DgAAACAAIBQkJBckBwgbK7EGAEQEFhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIwci
  JjU1MxUC/GZ8eUSAMxcIER0IBStnLzM6Nj4nDxOEcF5LV2gYGAoZDhUtAhAWIR8h
  IAEVF82NAAEBNAHjA7MFNwAeADBALQ0BAgMBTAACAwEDAgGAAAMDMk0FBAIBAQBf
  AAAAMwBOAAAAHgAdJyMjNAYJGisAFhUUBiMhIjU0NjMzEQcGIyInJjU0NyU2MzIW
  FREzA5sYGBn96zIZGcypEg0ZFQ8bAS0QChIYwgJgHSEhHj8hHQInWAkiGxAYDZgH
  FxT9VAACAOsB0QPhBLkADwAfACpAJwQBAQUBAwIBA2kAAgIAYQAAADUAThAQAAAQ
  HxAeGBYADwAOJgYJFysAFhYVFAYGIyImJjU0NjYzDgIVFBYWMzI2NjU0JiYjAtGt
  Y2Ota2utY2Ota0ZtPDxtRkdsPDxsRwS5YKpqa6lgYKlraqpghD5tRUVuPT1tRkVt
  PgAABP/7/yIE0QVyAB0ALwBOAFEAb7EGZERAZB8BAAFQAQQJQgEGCgNMFQkCAkoA
  AgUChQAFAQWFAAQJCgkECoADAQEAAAkBAGcACQQHCVkNCwwDCggBBgcKBmkACQkH
  YgAHCQdST08wME9RT1EwTjBNSkgjIyYYGSwjIjEOCB8rsQYARAAGIyEiNTQzMxEH
  BiMiJyY1NDc3NjMyFhURMzIWFSQVFAcBBiMiJyY1NDcBNjMyFxIWFRQGIyMVFAYj
  IiY1NSEiJjU0NjcBNjYzMhYVETMjEwMCERQV/kMqKqqNDgwXDw0X+wkNDxSiFRQC
  TA78agcJFxUODgOWBwkXFW4UFBRbGh4eG/7GFBkGCAE9Dx8VHS1bzAXdAsQZNTQB
  zEoHHBUPFAt/BRIR/cUZGz4UEwj9zwQcFBISCQIxBBz9HBgcHBmZFBQUFJkhIA8T
  CwF5ExIbFP6MAQr+9gAAA//7/ygEywVyAB0ALwBdAP+xBmREQA8fAQEFRAEEBwJM
  FQkCAkpLsBdQWEA7AAIFAoUABQEFhQgBBAcLBwQLgAwBCwoKC3ADAQEAAAkBAGcA
  CQAHBAkHaQAKBgYKVwAKCgZgAAYKBlAbS7AxUFhAPAACBQKFAAUBBYUIAQQHCwcE
  C4AMAQsKBwsKfgMBAQAACQEAZwAJAAcECQdpAAoGBgpXAAoKBmAABgoGUBtAQgAC
  BQKFAAUBBYUABAcIBwQIgAAICwcIC34MAQsKBwsKfgMBAQAACQEAZwAJAAcECQdp
  AAoGBgpXAAoKBmAABgoGUFlZQBYwMDBdMFxZWFJQJSk2GBksIyIxDQgfK7EGAEQA
  BiMhIjU0MzMRBwYjIicmNTQ3NzYzMhYVETMyFhUkFRQHAQYjIicmNTQ3ATYzMhcS
  FhUVFCMhIjU0NyU2NjU0JiMiBgcVFAYjIiY1NTQ3NjYzMhYVFAYHByE1NDYzAhEU
  Ff5DKiqqjQ4MFw8NF/sJDQ8UohUUAkwO/GoHCRcVDg4DlgcJFxViGin+IygaARYw
  K0I+JEYdGh4eGhExfz1vf0JGxwENGh4CxBk1NAHMSgccFQ8UC38FEhH9xRkbcBQT
  CP3PBBwUEhIJAjEEHPyaFRV9LTwgF+koRCkxOREPVhYVFRZ6GAshJHRiQGo5pUEV
  FQAABAAU/yIE0QVzADsATQBsAG8A+LEGZERAGi4BBgUFAQMEQQECARABAAJvAQkO
  ZQELCgZMS7ATUFhATgAGBQQFBgSACAEBAwIDAQKAAAkOCg4JCoAQAQcABQYHBWkA
  BAADAQQDaQACAAAOAgBpEQEOCQwOWQ8BCg0BCwwKC2kRAQ4ODGIADA4MUhtAVAAG
  BQQFBgSAAAgDAQMIAYAAAQIDAQJ+AAkOCg4JCoAQAQcABQYHBWkABAADCAQDaQAC
  AAAOAgBpEQEOCQwOWQ8BCg0BCwwKC2kRAQ4ODGIADA4MUllAJE5OAABubU5sTmtj
  YV5cWVdTUUdGPj0AOwA6JCQzNCQXKhIIHSuxBgBEABYWFRQHFhYVFAYjIiYnJjU0
  NzYzMhcWFjMyNjU0JiMjIjU0NjMzMjY1NCYjIgcVFAYjIiY1NTQ3NjYzADMyFxYV
  FAcBBiMiJyY1NDcBEhYVETMyFhUUBiMjFRQGIyImNTUhIiY1NDY3ATY2MwEzEwFc
  bzxeNz2IhD18MRMHDhsHCSpgLUtST0osJBISIUZISkFDOBoeHhoRMHg7AwoJFxUO
  DvxqBwkXFQ4OA5YOLVsUFBQUWxoeHhv+xhQZBggBPQ8fFf8B2AUFczJbOmQzE1M+
  Y3EcGwoWDRMnAxYZNzI3LTQYHTA1MTIYNRUVFRVcGgkdHf3jHBIUEwj9zwQcFBIS
  CQIx/p0bFP6MGBwcGZkUFBQUmSEgDxMLAXkTEv5dAQoAAgEG/qcDzgOmAA0ANQB5
  QAobAQQCKAEDBAJMS7AXUFhAJgACAQQBAgSAAAQDAQQDfgYBAQEAYQAAACVNAAMD
  BWIHAQUFJwVOG0AjAAIBBAECBIAABAMBBAN+AAMHAQUDBWYGAQEBAGEAAAAlAU5Z
  QBYODgAADjUONC0rJyUZFwANAAwlCAgXKwAmNTU0NjMyFhUVFAYjAiYmNTQ2Njc3
  NjMyFxcWBgcHDgIVFBYzMjc1NDYzMhYVFRQGBwYjAlE2Nj09NjY9mJ1TRYdtDQU9
  PwMNAg8RRVBdLWVcf1giKSkiDA2XvAK2HSJyIh0dInIiHfvxT41dVntbLZAwMMYU
  GAccITpIMUtaJVkjHh4jfxUbCFv//wAKAAAEwgaVACIAJAAAAQcAQ//aAQ4ACbEC
  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
  AAQCCQRpAAMAAQMBZgAICAVhBgEFBStNAAcHBWEGAQUFKwdOWUAQUU9MSiUlJSsk
  JBckFwsIHyskFRQHBgYHFTYWFRQGIyImJyY1NDc2MzIXFhYzMjY1NCYjByImNTUu
  AjU0NjYzMhYXNTQ2MzIWFREUBiMiJjU0JiYjIgYGFRQWFjMyNjc2MzIXBB0gRrtl
  ZWZ8eUSAMxcIER0IBStnLzM6Nj4nDxN6t2N6241ZlTQiKSkiIikpIkB/WWCYVlGT
  YFytRxUSHRm7FyMXNUEIXQFeS1doGBgKGQ4VLQIQFiEfISABFRegEYPOfYrcfkE8
  PCMeHiP+3iMeHiM9XjRWmmBhmVY5NhAp//8Akv/qBEMFhwAiAEgAAAACAEM+AAAA
  //8Akv/qBEMFhwAiAEgAAAACAHPqAAAA//8Akv/qBEMFdAAiAEgAAAACASoUAAAA
  //8Akv/qBEMFUwAiAEgAAAACAGkKAAAA//8AuwAABEkFhwAiAWUAAAACAEPaAAAA
  //8AuwAABEkFhwAiAWUAAAACAHPCAAAA//8AuwAABEkFdAAiAWUAAAACASoAAAAA
  //8AuwAABEkFUwAiAWUAAAACAGkAAAAAAAIAjP/qBEAFNAAzAEMAp0AOMyggHBEF
  AgQPAQUBAkxLsBtQWEAoAAIEAQQCAYAAAwMkTQAEBCRNAAUFAWEAAQElTQcBBgYA
  YQAAACkAThtLsCBQWEAmAAIEAQQCAYAAAQAFBgEFaQADAyRNAAQEJE0HAQYGAGEA
  AAApAE4bQCMAAwQDhQAEAgSFAAIBAoUAAQAFBgEFaQcBBgYAYQAAACkATllZQA80
  NDRDNEIuJh4lJiQICBwrABEUBgYjIiYmNTQ2NjMyFyYnBwYjIiYnJjU0NzcmJyY1
  NDc2MzIXFhc3NjMyFhcWFRQHBwI2NjU0JiYjIgYGFRQWFjMEQHvYh4fYe3vYh3l2
  SYjwEQ4SGAoIK5UtTSUOGCIREn1g7REOEhgKCCuhWo9PT49eXo9PT49eAzv+dYbO
  cnLOhobOck14a1oHFxoTEiEQOBonEh0TGi0JPUVZBxcaExIhEDz8OEyKXFyKTEyK
  XFyKTP//AE0AAASRBS0AIgBRAAAAAgEwAAAAAP//AIT/6gRIBYcAIgBSAAAAAgBD
  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
  DAklIwIACA8BAgQDTEuwClBYQEgAAQAFBAFyAAUDAAVwAAMEAAMEfgAEAAIEAmYA
  DAwJYQoBCQkoTQALCwlhCgEJCShNAAcHAGEGAQAAKU0ACAgAYQYBAAApAE4bS7AM
  UFhASQABAAUAAQWAAAUDAAVwAAMEAAMEfgAEAAIEAmYADAwJYQoBCQkoTQALCwlh
  CgEJCShNAAcHAGEGAQAAKU0ACAgAYQYBAAApAE4bQEoAAQAFAAEFgAAFAwAFA34A
  AwQAAwR+AAQAAgQCZgAMDAlhCgEJCShNAAsLCWEKAQkJKE0ABwcAYQYBAAApTQAI
  CABhBgEAACkATllZQBRcWldVUE5JRyMlKSQkFyQREg0IHyskBgYHFTYWFRQGIyIm
  JyY1NDc2MzIXFhYzMjY1NCYjByImNTUmJxUUBiMiJjURNDYzMhcWFjMyNjU0Jicm
  JicmJicmJjU0NjYzMhYXNTQ2MzIWFRUUBiMiJyYmIyIGFRQWFxYWFxYWFxYWFQQp
  WKx6ZWZ8eUSAMxcIER0IBStnLzM6Nj4nDxOUXyIpKSIiKSsPKbODgIk/PCZaTlJv
  L1BZY7FxWKQ6IikpIiIpJg4wrm9ueSonI15PVmUxZHHlmFsHXAFeS1doGBgKGQ4V
  LQIQFiEfISABFRejHGtOIx4eIwEsIx4qdHxuWz9PGhEVEBAcFSR7ZGeYUUQ6PSMe
  HiPmIx4aW19mVik4FBIXDxEXFCmTfQABALP+KAQaA7IAawEXQA9MAQwJJSMCAAgP
  AQIEA0xLsApQWEBIAAEABQQBcgAFAwAFcAADBAADBH4ABAACBAJmAAwMCWEKAQkJ
  K00ACwsJYQoBCQkrTQAHBwBhBgEAAClNAAgIAGEGAQAAKQBOG0uwDFBYQEkAAQAF
  AAEFgAAFAwAFcAADBAADBH4ABAACBAJmAAwMCWEKAQkJK00ACwsJYQoBCQkrTQAH
  BwBhBgEAAClNAAgIAGEGAQAAKQBOG0BKAAEABQABBYAABQMABQN+AAMEAAMEfgAE
  AAIEAmYADAwJYQoBCQkrTQALCwlhCgEJCStNAAcHAGEGAQAAKU0ACAgAYQYBAAAp
  AE5ZWUAUXVtYVlFPSkgkJSkkJBckERINCB8rJAYGBxU2FhUUBiMiJicmNTQ3NjMy
  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
  AWcGAQIFAQMEAgNnAAQECWEKAQkJKAROWVlZWUASAAAAMQAwJCEkIyMkISQjCwgf
  KwAWFRUzMhYVFAYjIxUzMhYVFAYjIxUUBiMiJjU1IyImNTQ2MzM1IyImNTQ2MzM1
  NDYzAosfwSIdHSLBwSIdHSLBHyUlH8EiHR0iwcEiHR0iwR8lBLkdIqwfJSUf9h8l
  JR+sIh0dIqwfJSUf9h8lJR+sIh0AAQF+AWMDTgNVAA0AH0AcAgEBAAABWQIBAQEA
  YQAAAQBRAAAADQAMJQMIFysAFhURFAYjIiY1ETQ2MwLhbW17e21tewNVLjT+0jQu
  LjQBLjQuAAMAbf/2BF8A5gANABsAKQAvQCwIBQcDBgUBAQBhBAICAAAjAE4cHA4O
  AAAcKRwoIyEOGw4aFRMADQAMJQkIFyskFhUVFAYjIiY1NTQ2MyAWFRUUBiMiJjU1
  NDYzIBYVFRQGIyImNTU0NjMBDjExODgxMTgByDExODgxMTgByDExODgxMTjmGRyG
  HBkZHIYcGRkchhwZGRyGHBkZHIYcGRkchhwZAAAGADL/6gY8BLkADwAhADEATQBd
  AG0AfUB6SgELCDwBBgMCTAACAQUBAgWAAAMKBgoDBoAABAAACAQAaRAJAggSDRED
  CwoIC2kPAQUFAWEOAQEBKE0MAQoKBmEHAQYGKQZOXl5OTjIyIiIAAF5tXmxmZE5d
  TlxWVDJNMkxIRkA+OjgiMSIwKigbGRIQAA8ADiYTCBcrABYWFRQGBiMiJiY1NDY2
  MwQzMhcWFRQHAQYjIicmNTQ3ASQGBhUUFhYzMjY2NTQmJiMAFhYVFAYGIyImJwYG
  IyImJjU0NjYzMhYXNjYzBAYGFRQWFjMyNjY1NCYmIyAGBhUUFhYzMjY2NTQmJiMB
  jn5KSn5KSn5KSn5KAr0XGhgZGPyWFhcaGBkYA2r9MkInJ0InJ0InJ0InBDB+Skp+
  SkBtJCVsQEp+Skp+SkBsJSRtQP43QicnQicnQicnQicBe0InJ0InJ0InJ0InBLlK
  fkpKfkpKfkpKfkqAGxsWFxf8whYbGxYYFgM+FCdCJydCJydCJydCJ/3XSn5KSn5K
  ODAxN0p+Skp+SjgxMTiCJ0InJ0InJ0InJ0InJ0InJ0InJ0InJ0InAAABAYkAtgM/
  A7IAFwAaQBcIBQIBAAFMAAEBAGEAAAArAU4sIAIIGCsAMzIXFhUUBwMTFhUUBwYj
  IicBJjU0NwEC0BQcIB8O9vYOHyAcFAz+zgkJATIDshwbGBAQ/vH+8RAQGBscDwFX
  Cw0PCQFXAAEBjQC2A0MDsgAXABtAGBcNCgMAAQFMAAAAAWEAAQErAE4sJQIIGCsA
  FRQHAQYjIicmNTQ3EwMmNTQ3NjMyFwEDQwn+zgwUHCAfDvb2Dh8gHBQMATICQw8N
  C/6pDxwbGBAQAQ8BDxAQGBscD/6pAAABAG8AxARdA1YAEQAXQBQFAQEAAUwAAAEA
  hQABAXYYEQIIGCsAMzIXFhUUBwEGIyInJjU0NwEEGgkXFQ4O/GoHCRcVDg4DlgNW
  HBIUEwj9zwQcFBISCQIxAAACADwC7AT5BSoAIwA6AmS3IBIKAwEFAUxLsApQWEAn
  AAEFAAUBAIAGAgIAAIQKCAkEBAMFBQNZCggJBAQDAwVhBwEFAwVRG0uwDFBYQCgJ
  BAIDCAOFAAEFAAUBAIAGAgIAAIQKAQgFBQhXCgEICAVhBwEFCAVRG0uwDVBYQCcA
  AQUABQEAgAYCAgAAhAoICQQEAwUFA1kKCAkEBAMDBWEHAQUDBVEbS7APUFhAKAkE
  AgMIA4UAAQUABQEAgAYCAgAAhAoBCAUFCFcKAQgIBWEHAQUIBVEbS7AQUFhAJwAB
  BQAFAQCABgICAACECggJBAQDBQUDWQoICQQEAwMFYQcBBQMFURtLsBJQWEAoCQQC
  AwgDhQABBQAFAQCABgICAACECgEIBQUIVwoBCAgFYQcBBQgFURtLsBNQWEAnAAEF
  AAUBAIAGAgIAAIQKCAkEBAMFBQNZCggJBAQDAwVhBwEFAwVRG0uwFVBYQCgJBAID
  CAOFAAEFAAUBAIAGAgIAAIQKAQgFBQhXCgEICAVhBwEFCAVRG0uwFlBYQCcAAQUA
  BQEAgAYCAgAAhAoICQQEAwUFA1kKCAkEBAMDBWEHAQUDBVEbS7AYUFhAKAkEAgMI
  A4UAAQUABQEAgAYCAgAAhAoBCAUFCFcKAQgIBWEHAQUIBVEbS7AZUFhAJwABBQAF
  AQCABgICAACECggJBAQDBQUDWQoICQQEAwMFYQcBBQMFURtAKAkEAgMIA4UAAQUA
  BQEAgAYCAgAAhAoBCAUFCFcKAQgIBWEHAQUIBVFZWVlZWVlZWVlZWUAZJCQAACQ6
  JDg0Mi8tKigAIwAiJSYmJQsGGisAFhcTFgYjIiYnAwcGBiMiJicnAwYGIyImNxM2
  NjMyFxMTNjMEFhUUBiMjERQGIyImNREjIiY1NDYzIQS2IQIeAhkiIhsCEl0MJhYW
  JwteEQIbIiIZAh4CISIyDI6ODDL9hx0dIoEcIiIcgSIdHSIBfgUqHiP+RCMeHSQB
  A8AXGRkXwP79JB0eIwG8Ix4a/tUBKxoKGyEhGv6EIx4eIwF8GiEhGwABAFEAAAR7
  BLkANQApQCYAAgIFYQYBBQUUTQQBAAABXwMBAQEVAU4AAAA1ADQkOio0JgcHGysA
  FhIVFAYHMzIWFRQGIyEiJjU0NzY2NTQmJiMiBgYVFBYXFhUUBiMhIiY1NDYzMyYm
  NTQSNjMDAu+DgmexIh0dIv6yIh0Rh49bp25up1uPhxEdIv6yIh0dIrFngoPvnAS5
  kv72rpT7UCEnJyEkKjQMVvGahcZra8aFmvFWDDQqJCEnJyFQ+5SuAQqSAAIAp//p
  BBkEuQAmADMASUBGMBQCBQYBTAADAgECAwGABwEEAAIDBAJpAAEIAQYFAQZpAAUA
  AAVZAAUFAGEAAAUAUScnAAAnMycyLiwAJgAlMSYmKAkGGisAFhYVFAIHBgYjIiYm
  NTQ2NjMyFhc2NTQmIyIHBiMiJicmNTQ3NjMCBgYVFBYzNjY3JiYjAvO3bzw2Q8mN
  a6NZZ7RwcagqF4iDQFMFChAaDAkfW2qTcj5wXG2XMROJZwS5ZdKccP7yb4qGXKNm
  dbVja2JuWJyuFwIZHhcQIQ4n/Y4+cUtecQFvc2WBAAIAkwAABDgEuQASABYAIEAd
  AwEBARRNAAICAF8AAAAVAE4AABUUABIAETcEBxcrABYXARYVFAYjISImNTQ3ATY2
  MwcBIQECkTEMAWUFHSL82SIdBgFpDDIpAv7aAkr+3gS5HyL78g8XJR8fJRQSBA4i
  H7v8igN2AAEAw//2BAkEowAZACdAJAIBAAEAhgQBAwEBA1cEAQMDAV8AAQMBTwAA
  ABkAFzMTNQUGGSsAFhURFAYjIyImNREhERQGIyMiJjURNDYzIQPsHSEpAikh/eYh
  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
  AQUHAUxLsApQWEA+DAEAAQIBAAKAAAQDCAcEcgAIBgMIBn4ABgcDBgd+AAcABQcF
  ZgsBAQENXw4BDQ0iTQoBAgIDXwkBAwMjA04bQD8MAQABAgEAAoAABAMIAwQIgAAI
  BgMIBn4ABgcDBgd+AAcABQcFZgsBAQENXw4BDQ0iTQoBAgIDXwkBAwMjA05ZQBoA
  AABKAEhDQT49PDo2NCQkFyQRJCETJQ8IHysAFhURFAYjIiY1ESERMzIWFRQGIyMV
  NhYVFAYjIiYnJjU0NzYzMhcWFjMyNjU0JiMHIiY1NSMiJjU0NjMzESERFAYjIiY1
  ETQ2MyEENR0iKSki/vXsIh0dIvVlZnx5RIAzFwgRHQgFK2cvMzo2PicPE/UiHR0i
  7P71IikpIh0iA1oEox8l/ocjHh4jATX8bR8lJR9xAV5LV2gYGAoZDhUtAhAWIR8h
  IAEVF7EfJSUfA5P+yyMeHiMBeSUfAAABAHX+KARIBLkATgDxQAonAQALEwECBAJM
  S7AKUFhAPQAMBgsGDAuAAAEABQQBcgAFAwAFcAADBAADBH4JAQcKAQYMBwZnAAQA
  AgQCZgAICChNAAsLAGEAAAApAE4bS7AMUFhAPgAMBgsGDAuAAAEABQABBYAABQMA
  BXAAAwQAAwR+CQEHCgEGDAcGZwAEAAIEAmYACAgoTQALCwBhAAAAKQBOG0A/AAwG
  CwYMC4AAAQAFAAEFgAAFAwAFA34AAwQAAwR+CQEHCgEGDAcGZwAEAAIEAmYACAgo
  TQALCwBhAAAAKQBOWVlAFE1LSEZDQT07IyQoJCQXJBIVDQgfKyQVFAcGBiMjFTYW
  FRQGIyImJyY1NDc2MzIXFhYzMjY1NCYjByImNTUmJjURIyImNTQ2MzMRNDYzMhYV
  ESEyFhUUBiMhERQWMzI2NzYzMhcESCFOwFMHZWZ8eUSAMxcIER0IBStnLzM6Nj4n
  DxNhW8siHR0iyyIpKSIBmyIdHSL+ZU9iQ5RFDhEiGKETIBQxP1sBXktXaBgYChkO
  FS0CEBYhHyEgARUXriCnhwF5HyUlHwEsIx4eI/7UHyUlH/6Ucmo2LQou//8AUAAA
  BEwGagAiACgAAAEHASwAAAEOAAmxAQG4AQ6wNSsA//8AyAAABAQGagAiACwAAAEH
  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
  BiMiJicjIiY1NDYzMyY1NDcjIiY1NDYzMzY2MzIWFzU0NjMEJCIiKSkiO3ZTZo8i
  ASIiHR0i/scEAwE6Ih0dIv7aH4poW6hIERQeFxIfXs5sq94pYSIdHSJQAwRRIh0d
  ImQr4KRUijAiKQS5HiP+tiMeHiNDcUN9dB8lJR8pNygmHyUlH3iAOTgOJx4XHhZB
  QtG7HyUlHyQrOyQfJSUft85AOjkjHgABACgAAARWBKMAPwCJS7AKUFhAMQAAAQIB
  AHIAAgADBAIDZwoBBAkBBQYEBWcLAQEBDF8NAQwMIk0IAQYGB18ABwcjB04bQDIA
  AAECAQACgAACAAMEAgNnCgEECQEFBgQFZwsBAQEMXw0BDAwiTQgBBgYHXwAHByMH
  TllAGAAAAD8APTk3NjQwLiQ0ISQhJCETJQ4IHysAFhURFAYjIiY1NSERITIWFRQG
  IyEVITIWFRQGIyEVMzIWFRQGIyEiJjU0NjMzNSMiJjU0NjMzESMiJjU0NjMhBDkd
  IikpIv3pAVkiHR0i/qcBuCIdHSL+SOgiHR0i/f4iHR0ihKwiHR0irIQiHR0iA4gE
  ox8l/vgjHh4jxP6hHyUlH5AfJSUflB8lJR8fJSUflB8lJR8Cdx8lJR8AAAP/4v/q
  BOoEowBIAEsATgCKtQ0BAAQBTEuwGVBYQCkRDgoIBAQQDwMDAAEEAGkNCwcDBQUG
  XwwBBgYiTQAJCSVNAgEBASkBThtALAAJBQQFCQSAEQ4KCAQEEA8DAwABBABpDQsH
  AwUFBl8MAQYGIk0CAQEBKQFOWUAgAABOTUtKAEgAR0ZEQD05NzY1MjARJDQhJCMk
  IyQSCB8rABYVFAYjIwMGBiMiJwMDBiMiJicDIyImNTQ2MzMDIyImNTQ2MyEyFhUU
  BiMjEzM3NjMyFhcXMxMjIiY1NDYzITIWFRQGIyMDMwETIwETIwTNHR0ihk4FKShS
  FLm7FVMnKQRLfyIdHSJtKDEiHR0iAVgiHR0ikibeHA46ICMGHt4nfCIdHSIBRCId
  HSI2KXP8tHShAjUvoQLuHyUlH/3FJB1BAkX9u0EeIwI7HyUlHwEtHyUlHx8lJR/+
  01gvFBRfAS0fJSUfHyUlH/7T/gwBbP6UAWwAAQDD/qEECQYuABEAHkAbCwICAAEB
  TAIBAQABhQAAAHYAAAARABAnAwYXKwAWFRQHAQYGIyImNTQ3ATY2MwPWMwP9WgYj
  GCkzAwKmBiMYBi4dGQcJ+N0QFB4YBwkHIxETAP//ANr+cgP8A6YAAgB0AAAAAQGe
  AqkDSwSsABIAGkAXCgECAAEBTAAAAQCGAAEBIgFOKCUCCBgrABUUBwEGIyInJjU0
  NxM2NjMyFwNLCf6wDBATEBUG9goTDhkuBGkfDAv+gw0NEBkMCgGXEBAc//8A1gKp
  BBMErAAjAX7/OAAAAAMBfgDIAAAAAAAB/Qn98v4E/24ADwAtsQZkREAiCgICAQAB
  TAAAAQEAWQAAAAFhAgEBAAFRAAAADwAONgMIFyuxBgBEACY1NDcTNjMzMhUUBwMG
  I/0rIgI/CCJ0HAZ1Dyz98hgVBAwBHyAaDA3+3SYAAAH9Cf3y/gT/bgAPACVAIgoC
  AgEAAUwAAAEBAFkAAAABYQIBAQABUQAAAA8ADjYDBxcrACY1NDcTNjMzMhUUBwMG
  I/0rIgI/CCJ0HAZ1Dyz98hgVBAwBHyAaDA3+3SYA//8BoQUcA5MGlQEHAHMAAAEO
  AAmxAAG4AQ6wNSsAAAD//wEeBT0DrgZqAQcBLAAAAQ4ACbEAAbgBDrA1KwAAAAAB
  APoDXgIJBSAAEAA0tQoBAAEBTEuwIFBYQAsAAAABYQABASQAThtAEAABAAABWQAB
  AQBhAAABAFFZtCYmAggYKwAWFRQHAwYjIiY1NDcTNjMzAfsOBYYNPRweAlIIInYF
  IA8MCQ/+lSQWFAQKAWogAP//AScFHwOlBoQBBwErAAABDgAJsQABuAEOsDUrAAAA
  //8BX/4oA2IAHAACAHcAAP//AScFHQOlBoIBBwEqAAABDgAJsQABuAEOsDUrAAAA
  //8BNQVdA5cGYQEHAGkAAAEOAAmxAAK4AQ6wNSsAAAD//wIHBV0CxQZhAQcBLQAA
  AQ4ACbEAAbgBDrA1KwAAAP//ATkFHAMrBpUBBwBDAAABDgAJsQABuAEOsDUrAAAA
  //8BPQUdBE8GhAEHATEAAAEOAAmxAAK4AQ6wNSsAAAD//wEiBWADqgXwAQcAbgAA
  AQ4ACbEAAbgBDrA1KwAAAP//AZv+KAMpABwAAgEvAAD//wFwBTcDXAcjAQcBLgAA
  AQ4ACbEAArgBDrA1KwAAAP//AQ4FTAO+BjsBBwEwAAABDgAJsQABuAEOsDUrAAAA
].join("")

header = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">'
header2 = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">'
# header += '<rect width="100" height="100" style="fill:rgba(0,0,0,0.2);" />'
footer = '</svg>'
header3 = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">
<defs>
<style>
@font-face {
  font-family:\"Courier Prime\";
  src:url(\"data:font/opentype;charset=utf-8;base64,#{font_base64}\");
}
</style>
</defs>"
header600 = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600">'

def scale_path(path, xoffset, yoffset, scale)
  path.map do |section|
    if ["M", "L"].include?(section[0])
      [section[0], section[1]*scale + xoffset, section[2]*scale + yoffset]
    else
      section.map do |segment|
        if segment == "C"
          "C"
        else
          [segment[0]*scale + xoffset, segment[1]*scale + yoffset]
        end
      end
    end
  end
end

def write_text(cx, cy, size, text, file, color = "#000", rotate = "")
  file.puts "<text x=\"#{cx}\" y=\"#{cy}\" #{rotate}" +
    "style=\"fill:#{color};font-size:#{size}em;font-family:'Courier Prime';" +
    "text-anchor:middle;\">#{text}</text>"
end

def write_circle(cx, cy, radius, file, fill=true, color="#000", width=3)
  string = "<circle cx=\"#{cx}\" cy=\"#{cy}\" r=\"#{radius}\""
  if fill
    file.puts string + " style=\"fill:#{color};\" />"
  else
    file.puts string + " style=\"fill:rgba(0,0,0,0);stroke-width:#{width};stroke:#{color};\" />"
  end
end

def write_ellipse(cx, cy, rx, ry, file, fill=true, color="#000")
  string = "<ellipse cx=\"#{cx}\" cy=\"#{cy}\" rx=\"#{rx}\" ry=\"#{ry}\""
  if fill
    file.puts string + " style=\"fill:#{color};\" />"
  else
    file.puts string + " style=\"fill:rgba(0,0,0,0);stroke-width:3;stroke:#{color};\" />"
  end
end

def write_path(path, file, fill=true, line=3, color = "#000")
  string = '<path d="'
  string += path.map do |section|
    section.map do |segment|
      if segment.is_a? Array
        segment.map { |n| n.to_s }.join(',')
      else
        segment
      end
    end.join(' ')
  end.join(' ')
  if fill
    file.puts string + "\" style=\"fill:#{color};\" />"
  else
    file.puts string + '" style="fill:rgba(0,0,0,0);stroke-width:' + line.to_s +
      ";stroke:#{color};\" />"
  end
end

def write_path_dash(path, file, line=6, color = "#000")
  string = '<path d="'
  string += path.map do |section|
    section.map do |segment|
      if segment.is_a? Array
        segment.map { |n| n.to_s }.join(',')
      else
        segment
      end
    end.join(' ')
  end.join(' ')
  file.puts string + '" style="fill:rgba(0,0,0,0);stroke-width:' + line.to_s +
    ";stroke:#{color};\" stroke-dasharray=\"3 6\" />"
end

File.open('leader.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 55], ["A", [40, 45], 0, [0, 1], [90, 55]], ["L", 10, 55],
    ["A", [45, 50], 0, [0, 1], [90, 55]],
  ], file, true)
  write_path([
    ["M", 77.5, 55], ["A", [27.5, 35], 0, [0, 1], [22.5, 55]],
  ], file, false)
  write_path([["M", 40, 40], ["L", 50, 50], ["L", 60, 40]], file, true, 3, "#DDD")
  # path = []
  # 0.upto(6) do |n|
  #   x = Math.sin(n * 144.0 / 180 * Math::PI) * -16 + 50
  #   y = Math.cos(n * 144.0 / 180 * Math::PI) * -16 + 35
  #   path.push([n == 0 ? "M" : "L", x, y])
  # end
  # write_path(path, file, true, 3, "#FFF")
  file.puts footer
end

# File.open('leader.svg', 'w') do |file|
#   file.puts header
#   path = []
#   0.upto(6) do |n|
#     x = Math.sin(n * 144.0 / 180 * Math::PI) * -30 + 50
#     y = Math.cos(n * 144.0 / 180 * Math::PI) * -30 + 50
#     path.push([n == 0 ? "M" : "L", x, y])
#   end
#   write_path(path, file)
#   path = []
#   0.upto(7) do |n|
#     x = Math.cos(n / 3.0 * Math::PI) * -45 + 50
#     y = Math.sin(n / 3.0 * Math::PI) * -45 + 50
#     path.push([n == 0 ? "M" : "L", x, y])
#   end
#   write_path(path, file, false)
#   # write_path([["M", 20, 15], ["L", 80, 45]], file, false)
#   # write_path([["M", 20, 35], ["L", 80, 65]], file, false)
#   # write_path([["M", 20, 55], ["L", 80, 85]], file, false)
#   # helmet_paths.each do |path|
#   #   write_path(scale_path(path, 0, 0, 1), file)
#   # end
#   file.puts footer
# end

File.open('crew.svg', 'w') do |file|
  file.puts header3
  write_path([
    ["M", 10, 90], ["L", 10, 30], ["L", 90, 30], ["L", 90, 90], ["L", 10, 90], ["L", 10, 30],
  ], file, false)
  write_path([["M", 10, 90], ["L", 90, 30]], file, false)
  write_path([["M", 10, 30], ["L", 90, 90]], file, false)
  write_circle(50, 16, 10, file, false)
  write_text(50, 88, 1.33, "WPN", file)
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 0, 0, 0.625), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 37.5, 37.5, 0.625), file)
  # end
  file.puts footer
end

File.open('team.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 90], ["L", 10, 30], ["L", 90, 30], ["L", 90, 90], ["L", 10, 90], ["L", 10, 30],
  ], file, false)
  write_path([["M", 10, 90], ["L", 90, 30]], file, false)
  write_path([["M", 10, 30], ["L", 90, 90]], file, false)
  write_circle(50, 16, 10, file, false)
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 0, -2.5, 0.575), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 40, 21.25, 0.575), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 0, 45, 0.575), file)
  # end
  file.puts footer
end

File.open('squad.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 90], ["L", 10, 30], ["L", 90, 30], ["L", 90, 90], ["L", 10, 90], ["L", 10, 30],
  ], file, false)
  write_path([["M", 10, 90], ["L", 90, 30]], file, false)
  write_path([["M", 10, 30], ["L", 90, 90]], file, false)
  write_circle(50, 16, 12, file)
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, -2.5, -2.5, 0.45), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 27.5, 17.5, 0.45), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 57.5, -2.5, 0.45), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, -2.5, 37.5, 0.45), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 27.5, 57.5, 0.45), file)
  # end
  # helmet_paths.each do |path|
  #   write_path(scale_path(path, 57.5, 37.5, 0.45), file)
  # end
  file.puts footer
end

File.open('mg.svg', 'w') do |file|
  file.puts header
  write_path([["M", 50, 80], ["L", 50, 20]], file, false)
  write_path([["M", 35, 40], ["L", 50, 20], ["L", 65, 40]], file, false)
  write_path([["M", 35, 80], ["L", 65, 80]], file, false)
  file.puts footer
end

File.open('flamethrower.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 40, 80], ["L", 40, 30], ["A", [10, 10], 0, [0, 1], [60, 30]], ["L", 60, 40]
  ], file, false)
  write_path([["M", 30, 80], ["L", 60, 80]], file, false)
  file.puts footer
end

File.open('explosive.svg', 'w') do |file|
  file.puts header
  sqrt = 30/Math.sqrt(2)
  write_path([["M", 50, 30], ["L", 50, 45]], file, false)
  write_path([["M", 50 + sqrt, 60 - sqrt], ["L", 50 + sqrt/2, 60 - sqrt/2]], file, false)
  write_path([["M", 50 - sqrt, 60 - sqrt], ["L", 50 - sqrt/2, 60 - sqrt/2]], file, false)
  write_circle(50, 60, 15, file, false)
  file.puts footer
end

File.open('rocket.svg', 'w') do |file|
  file.puts header
  write_path([["M", 35, 30], ["L", 50, 10], ["L", 65, 30]], file, false)
  write_path([["M", 35, 45], ["L", 50, 25], ["L", 65, 45]], file, false)
  write_path([["M", 50, 25], ["L", 50, 70], ["L", 65, 90]], file, false)
  write_path([["M", 50, 70], ["L", 35, 90]], file, false)
  file.puts footer
end

File.open('antitank.svg', 'w') do |file|
  file.puts header
  write_path([["M", 50, 10], ["L", 50, 70], ["L", 65, 90]], file, false)
  write_path([["M", 50, 70], ["L", 35, 90]], file, false)
  file.puts footer
end

File.open('mortar.svg', 'w') do |file|
  file.puts header
  write_path([["M", 50, 70], ["L", 50, 20]], file, false)
  write_path([["M", 35, 40], ["L", 50, 20], ["L", 65, 40]], file, false)
  write_circle(50, 78, 8, file, false)
  file.puts footer
end

File.open('gun.svg', 'w') do |file|
  file.puts header
  write_path([["M", 50, 10], ["L", 50, 74]], file, false)
  write_circle(50, 82, 8, file, false)
  write_path([["M", 65, 30], ["L", 65, 65]], file, false)
  write_path([["M", 35, 30], ["L", 35, 65]], file, false)
  file.puts footer
end

File.open('atgun.svg', 'w') do |file|
  file.puts header
  write_path([["M", 50, 10], ["L", 50, 70], ["L", 65, 90]], file, false)
  write_path([["M", 50, 70], ["L", 35, 90]], file, false)
  write_path([["M", 65, 30], ["L", 65, 65]], file, false)
  write_path([["M", 35, 30], ["L", 35, 65]], file, false)
  file.puts footer
end

File.open('radio.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 20, 40], ["L", 30, 30], ["L", 40, 40], ["L", 50, 30], ["L", 60, 40],
    ["L", 70, 30], ["L", 80, 40],
  ], file, false)
  write_path([["M", 50, 30], ["L", 50, 80]], file, false)
  file.puts footer
end

File.open('tank.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  file.puts footer
end

File.open('tank-amp.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  y1 = 90
  y2 = 80
  write_path([
    ["M", 15, y2], ["C", [22, y2], [18, y1], [25, y1]], ["C", [32, y1], [28, y2], [35, y2]],
    ["C", [42, y2], [38, y1], [45, y1]], ["C", [52, y1], [48, y2], [55, y2]],
    ["C", [62, y2], [58, y1], [65, y1]], ["C", [72, y1], [68, y2], [75, y2]],
  ], file, false)
  file.puts footer
end

File.open('spg.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_circle(45, 50, 8, file)
  file.puts footer
end

File.open('spgmg.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_circle(45, 50, 8, file, false)
  file.puts footer
end

File.open('spat.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 45, 50], ["L", 75, 98]], file, false)
  file.puts footer
end

File.open('spft.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([
    ["M", 37.5, 98], ["L", 37.5, 42.5], ["A", [7.5, 7.5], 0, [0, 1], [52.5, 42.5]], ["L", 52.5, 47.5]
  ], file, false)
  file.puts footer
end

File.open('ac.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_circle(58, 89.5, 5, file, false)
  write_circle(45, 89.5, 5, file, false)
  write_circle(32, 89.5, 5, file, false)
  file.puts footer
end

File.open('truck.svg', 'w') do |file|
  file.puts header
  radius = 24
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_circle(45, 50, radius, file, false)
  path = []
  0.upto(3) do |n|
    x = Math.sin(n * 45.0 / 180 * Math::PI) * radius + 45
    y = Math.cos(n * 45.0 / 180 * Math::PI) * radius + 50
    path.push(["M", x, y])
    x = Math.sin(n * 45.0 / 180 * Math::PI) * -radius + 45
    y = Math.cos(n * 45.0 / 180 * Math::PI) * -radius + 50
    path.push(["L", x, y])
  end
  write_path(path, file, false)
  file.puts footer
end

File.open('truck-amp.svg', 'w') do |file|
  file.puts header
  radius = 24
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_circle(45, 50, radius, file, false)
  path = []
  0.upto(3) do |n|
    x = Math.sin(n * 45.0 / 180 * Math::PI) * radius + 45
    y = Math.cos(n * 45.0 / 180 * Math::PI) * radius + 50
    path.push(["M", x, y])
    x = Math.sin(n * 45.0 / 180 * Math::PI) * -radius + 45
    y = Math.cos(n * 45.0 / 180 * Math::PI) * -radius + 50
    path.push(["L", x, y])
  end
  write_path(path, file, false)
  y1 = 90
  y2 = 80
  write_path([
    ["M", 15, y2], ["C", [22, y2], [18, y1], [25, y1]], ["C", [32, y1], [28, y2], [35, y2]],
    ["C", [42, y2], [38, y1], [45, y1]], ["C", [52, y1], [48, y2], [55, y2]],
    ["C", [62, y2], [58, y1], [65, y1]], ["C", [72, y1], [68, y2], [75, y2]],
  ], file, false)
  file.puts footer
end

File.open('car.svg', 'w') do |file|
  file.puts header
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_circle(58, 89.5, 5, file, false)
  write_circle(45, 89.5, 5, file, false)
  write_circle(32, 89.5, 5, file, false)
  file.puts footer
end

File.open('cav.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 90], ["L", 10, 30], ["L", 90, 30], ["L", 90, 90], ["L", 10, 90], ["L", 10, 30],
  ], file, false)
  write_path([["M", 10, 90], ["L", 90, 30]], file, false)
  file.puts footer
end

File.open('cav-wheel.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 90], ["L", 10, 30], ["L", 90, 30], ["L", 90, 90], ["L", 10, 90], ["L", 10, 30],
  ], file, false)
  write_path([["M", 10, 90], ["L", 90, 30]], file, false)
  write_circle(78, 82, 5, file, false)
  write_circle(65, 82, 5, file, false)
  file.puts footer
end

File.open('acav.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  file.puts footer
end

File.open('ht.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  file.puts footer
end

File.open('htgun.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  write_circle(45, 50, 8, file)
  file.puts footer
end

File.open('htat.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  write_path([["M", 35, 98], ["L", 45, 80], ["L", 55, 98]], file, false)
  file.puts footer
end

File.open('ht-amp.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  y1 = 90
  y2 = 80
  write_path([
    ["M", 15, y2], ["C", [22, y2], [18, y1], [25, y1]], ["C", [32, y1], [28, y2], [35, y2]],
    ["C", [42, y2], [38, y1], [45, y1]], ["C", [52, y1], [48, y2], [55, y2]],
    ["C", [62, y2], [58, y1], [65, y1]], ["C", [72, y1], [68, y2], [75, y2]],
  ], file, false)
  file.puts footer
end

File.open('htat-amp.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  # write_path([["M", 35, 98], ["L", 45, 80], ["L", 55, 98]], file, false)
  y1 = 90
  y2 = 80
  write_path([
    ["M", 15, y2], ["C", [22, y2], [18, y1], [25, y1]], ["C", [32, y1], [28, y2], [35, y2]],
    ["C", [42, y2], [38, y1], [45, y1]], ["C", [52, y1], [48, y2], [55, y2]],
    ["C", [62, y2], [58, y1], [65, y1]], ["C", [72, y1], [68, y2], [75, y2]],
  ], file, false)
  file.puts footer
end

File.open('htgun-amp.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  write_circle(45, 50, 8, file)
  y1 = 90
  y2 = 80
  write_path([
    ["M", 15, y2], ["C", [22, y2], [18, y1], [25, y1]], ["C", [32, y1], [28, y2], [35, y2]],
    ["C", [42, y2], [38, y1], [45, y1]], ["C", [52, y1], [48, y2], [55, y2]],
    ["C", [62, y2], [58, y1], [65, y1]], ["C", [72, y1], [68, y2], [75, y2]],
  ], file, false)
  file.puts footer
end

File.open('htmtr.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 20], ["L", 45, 8], ["L", 55, 20]], file, false)
  write_path([["M", 45, 42], ["L", 45, 8]], file, false)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  write_circle(45, 50, 8, file, false)
  file.puts footer
end

File.open('htft.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 3], ["L", 15, 98], ["L", 75, 98], ["L", 75, 3], ["L", 15, 3], ["L", 15, 98],
  ], file, false)
  write_path([["M", 35, 15], ["L", 45, 3], ["L", 55, 15]], file, false, 2)
  write_path([["M", 45, 20], ["L", 45, 3]], file, false, 2)
  write_path([
    ["M", 30, 42.5], ["A", [15, 15], 0, [0, 1], [60, 42.5]],
    ["L", 60, 57.5], ["A", [15, 15], 0, [0, 1], [30, 57.5]], ["L", 30, 42.5],
  ], file, false)
  write_path([["M", 15, 98], ["L", 75, 3]], file, false)
  write_path([["M", 75, 98], ["L", 15, 3]], file, false)
  write_path([
    ["M", 37.5, 98], ["L", 37.5, 42.5], ["A", [7.5, 7.5], 0, [0, 1], [52.5, 42.5]], ["L", 52.5, 47.5]
  ], file, false)
  file.puts footer
end

File.open('wreck.svg', 'w') do |file|
  file.puts header3
  write_path([
    ["M", 15, 10], ["L", 15, 98], ["L", 75, 98], ["L", 75, 10], ["L", 15, 10], ["L", 15, 98],
  ], file, false, 3, "#D00")
  write_path([
    ["M", 37.5, 70], ["C", [32.6, 70], [15, 60], [45, 30]], ["C", [45, 50], [61, 42], [61, 60]],
    ["C", [61, 70], [55, 70], [52.5, 70]], ["C", [54, 67], [60, 55], [45, 45]],
    ["C", [45, 55], [36, 53], [35, 60]], ["C", [34, 65], [35, 67.5], [37.5, 70]],
    ["C", [32.6, 70], [15, 60], [45, 30]],
  ], file, false, 3, "#D00")
  write_text(95.5, 55, 1.9, "WRECK", file, "#D00", rotate='transform="rotate(270 95 54)" ')
  file.puts footer
end

File.open('tracked-hull.svg', 'w') do |file|
  file.puts header2
  write_path([
    ["M", 65, 35], ["L", 75, 25], ["A", [15, 15], 0, [0, 1], [85, 20]],
    ["L", 115, 20], ["A", [15, 15], 0, [0, 1], [125, 25]], ["L", 135, 35],
    ["L", 135, 165], ["L", 125, 175], ["A", [15, 15], 0, [0, 1], [115, 180]],
    ["L", 85, 180], ["A", [15, 15], 0, [0, 1], [75, 175]], ["L", 65, 165],
    ["L", 65, 35], ["L", 75, 25]
  ], file, false, 4.5)
  write_path([["M", 100, 55], ["L", 100, 30]], file, false)
  write_path([["M", 85, 45], ["L", 100, 30], ["L", 115, 45]], file, false)
  write_path([
    ["M", 135, 20], ["L", 160, 20], ["L", 160, 180], ["L", 135, 180], ["L", 135, 20], ["L", 160, 20]
  ], file, false, 4.5)
  write_path([
    ["M", 65, 20], ["L", 40, 20], ["L", 40, 180], ["L", 65, 180], ["L", 65, 20], ["L", 40, 20]
  ], file, false, 4.5)
  0.upto(10) do |i|
    beg = 28.75
    diff = 14.25
    write_path([["M", 40, beg+i*diff], ["L", 65, beg+i*diff]], file, false)
    write_path([["M", 135, beg+i*diff], ["L", 160, beg+i*diff]], file, false)
  end
  file.puts footer
end

File.open('wheeled-hull.svg', 'w') do |file|
  file.puts header2
  write_path([
    ["M", 60, 40], ["A", [20, 20], 0, [0, 1], [80, 20]],
    ["L", 120, 20], ["A", [20, 20], 0, [0, 1], [140, 40]],
    ["L", 140, 160], ["A", [20, 20], 0, [0, 1], [120, 180]],
    ["L", 80, 180], ["A", [20, 20], 0, [0, 1], [60, 160]],
    ["L", 60, 40], ["A", [20, 20], 0, [0, 1], [80, 20]],
  ], file, false, 4.5)
  write_path([["M", 100, 55], ["L", 100, 30]], file, false)
  write_path([["M", 85, 45], ["L", 100, 30], ["L", 115, 45]], file, false)
  [
    [60, -8, 38], [140, 8, 38],
    [60, -8, 96], [140, 8, 96],
    [60, -8, 130], [140, 8, 130],
  ].each do |set|
    x = set[0]
    dx = set[1]
    y = set[2]
    write_path([
      ["M", x, y], ["A", [8, 8], 0, [0, dx > 0 ? 1 : 0], [x+dx, y+8]],
      ["L", x+dx, y+24], ["A", [8, 8], 0, [0, dx > 0 ? 1 : 0], [x, y+32]],
    ], file, true)
  end
  file.puts footer
end

File.open('fire.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 35, 90], ["C", [25.2, 90], [-10, 70], [50, 10]], ["C", [50, 50], [82, 34], [82, 70]],
    ["C", [82, 90], [70, 90], [65, 90]], ["C", [68, 84], [80, 60], [50, 40]],
    ["C", [50, 60], [32, 56], [30, 70]], ["C", [28, 80], [30, 85], [35, 90]],
    ["C", [25.2, 90], [-10, 70], [50, 10]],
  ], file, false, 3, "#D00")
  file.puts footer
end

File.open('smoke.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 10, 25], ["A", [10, 10], 0, [0, 1], [30, 20]], ["A", [10, 10], 0, [0, 1], [50, 15]],
    ["A", [10, 10], 0, [0, 1], [70, 20]], ["A", [10, 10], 0, [0, 1], [90, 25]],
    ["M", 20, 40], ["A", [10, 10], 0, [0, 1], [40, 35]], ["A", [10, 10], 0, [0, 1], [60, 35]],
    ["A", [10, 10], 0, [0, 1], [80, 40]],
    ["M", 10, 60], ["A", [10, 10], 0, [0, 1], [30, 55]], ["A", [10, 10], 0, [0, 1], [50, 50]],
    ["A", [10, 10], 0, [0, 1], [70, 55]], ["A", [10, 10], 0, [0, 1], [90, 60]],
    ["M", 20, 75], ["A", [10, 10], 0, [0, 1], [40, 70]], ["A", [10, 10], 0, [0, 1], [60, 70]],
    ["A", [10, 10], 0, [0, 1], [80, 75]],
    ["M", 30, 90], ["A", [10, 10], 0, [0, 1], [50, 85]], ["A", [10, 10], 0, [0, 1], [70, 90]],
  ], file, false)
  file.puts footer
end

File.open('rubble.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 25, 20], ["L", 45, 20], ["L", 60, 45], ["L", 60, 52], ["L", 40, 52], ["L", 38, 60],
    ["L", 38, 80], ["L", 2, 80], ["L", 8, 35], ["L", 25, 20], ["L", 45, 20],
    ["M", 8, 35], ["L", 25, 45], ["L", 60, 45],
    ["M", 25, 45], ["L", 20, 65],
    ["M", 38, 60], ["L", 38, 90], ["L", 85, 90], ["L", 80, 60], ["L", 64, 35], ["L", 55, 35],
    ["M", 38, 60], ["L", 80, 60],
    ["M", 48, 25], ["L", 85, 35], ["L", 96, 50], ["L", 98, 75], ["L", 82, 75],
    ["M", 70, 45], ["L", 96, 50],
  ], file, false)
  file.puts footer
end

File.open('roadblock.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 62, 17, file, true)
  write_path([
    ["M", 5, 15], ["L", 95, 15], ["L", 95, 40], ["L", 5, 40], ["L", 5, 15], ["L", 95, 15],
  ], file, false)
  write_path([
    ["M", 5, 40], ["L", 30, 15], ["L", 5, 15],
    ["M", 26.7, 40], ["L", 51.7, 15], ["L", 73.3, 15], ["L", 48.3, 40],
    ["M", 70, 40], ["L", 95, 15], ["L", 95, 40]
  ], file, true)
  write_path([
    ["M", 16.5, 40], ["L", 16.5, 86],
    ["M", 83.5, 40], ["L", 83.5, 86],
    # ["M", 17, 62], ["L", 34, 62],
    # ["M", 84, 71], ["L", 18, 71],
  ], file, false, 5)
  write_path([
    ["M", 2, 57], ["L", 31, 85],
    ["M", 2, 85], ["L", 31, 57],
    ["M", 98, 57], ["L", 69, 85],
    ["M", 98, 85], ["L", 69, 57],
    ["M", 36, 57], ["L", 64, 85],
    ["M", 36, 85], ["L", 64, 57],
  ], file, false, 5)
  # write_path([
  #   ["M", 42, 62], ["L", 58, 62],
  # ], file, false, 5, "#FFF")
  file.puts footer
end

File.open('tanktrap.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 45, 10], ["L", 55, 80],
    ["M", 15, 20], ["L", 95, 80],
    ["M", 85, 20], ["L", 5, 80],
  ], file, false, 7)
  file.puts footer
end

File.open('wire.svg', 'w') do |file|
  file.puts header
  path = [
    ["M", 14, 90], ["A", [40, 40], 0, [0, 0], [65, 50]], ["A", [25, 40], 0, [0, 0], [35, 10]],
    ["A", [25, 40], 0, [0, 0], [15, 50]], ["A", [30, 40], 0, [0, 0], [75, 50]],

    ["A", [25, 40], 0, [0, 0], [45, 10]], ["A", [25, 40], 0, [0, 0], [25, 50]],
    ["A", [30, 40], 0, [0, 0], [85, 50]],
    
    ["A", [25, 40], 0, [0, 0], [55, 10]], ["A", [25, 40], 0, [0, 0], [35, 50]],
    ["A", [40, 40], 0, [0, 0], [86, 90]],
  ]
  write_path(path, file, false)
  write_path_dash(path, file)
  file.puts footer
end

File.open('mines.svg', 'w') do |file|
  file.puts header
  write_ellipse(50, 42.5, 40, 16, file, false)
  write_path([
    ["M", 90, 42.5], ["L", 90, 57.5], ["A", [40, 16], 0, [0, 1], 10, 57.5], ["L", 10, 42.5],
  ], file, false)
  write_ellipse(50, 42.5, 25, 10, file, false)
  write_ellipse(50, 42.5, 7.5, 3, file, true)
  file.puts footer
end

File.open('foxhole.svg', 'w') do |file|
  file.puts header
  write_ellipse(50, 50, 45, 16, file, true, "#AAA")
  write_ellipse(50, 50, 45, 16, file, false)
  # write_path([
  #   ["M", 5, 50], ["A", [45, 20], 0, [0, 0], 95, 50], ["L", 5, 50],
  # ], file, true)
  file.puts footer
end

File.open('bunker.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(6) do |i|
    x0 = 50 + 48 * Math.sin((i-0.5)/3.0 * Math::PI)
    x1 = 50 + 48 * Math.sin((i+0.5)/3.0 * Math::PI)
    x2 = 50 + 48 * Math.sin((i+1.5)/3.0 * Math::PI)
    y0 = 50 + 48 * Math.cos((i-0.5)/3.0 * Math::PI)
    y1 = 50 + 48 * Math.cos((i+0.5)/3.0 * Math::PI)
    y2 = 50 + 48 * Math.cos((i+1.5)/3.0 * Math::PI)
    path.push(["M", (x0+x1*2)/3, (y0+y1*2)/3])
    path.push(["L", x1, y1])
    path.push(["L", (x1*2+x2)/3, (y1*2+y2)/3])
  end
  write_path(path, file, false, 6)
  write_path([
    ["M", 50, 50],
    ["L", 50, 2.5],
  ], file, false)

  # write_path([
  #   ["M", 5, 70], ["L", 30, 30], ["L", 70, 30], ["L", 95, 70], ["L", 5, 70], ["L", 30, 30],
  #   ["M", 40, 45], ["L", 60, 45]
  # ], file, false)
  file.puts footer
end

File.open('pol.svg', 'w') do |file|
  file.puts header
  write_path([
    ["M", 15, 15], ["L", 15, 50], ["L", 50, 50], ["L", 50, 15], ["L", 15, 15],
    ["M", 85, 85], ["L", 85, 50], ["L", 50, 50], ["L", 50, 85], ["L", 85, 85],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 15, 85], ["L", 15, 50], ["L", 50, 50], ["L", 50, 85], ["L", 15, 85],
    ["M", 85, 15], ["L", 85, 50], ["L", 50, 50], ["L", 50, 15], ["L", 85, 15],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 22, 22], ["L", 22, 50], ["L", 50, 50], ["L", 50, 22], ["L", 22, 22],
    ["M", 78, 78], ["L", 78, 50], ["L", 50, 50], ["L", 50, 78], ["L", 78, 78],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 22, 78], ["L", 22, 50], ["L", 50, 50], ["L", 50, 78], ["L", 22, 78],
    ["M", 78, 22], ["L", 78, 50], ["L", 50, 50], ["L", 50, 22], ["L", 78, 22],
  ], file, true, 3, "#FFF")
  file.puts footer
end

File.open('gre.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#33D")
  write_circle(50, 50, 26.7, file, true, "#FFF")
  write_circle(50, 50, 13.3, file, true, "#33D")
  # write_path([
  #   ["M", 15, 15], ["L", 15, 85], ["L", 85, 85], ["L", 85, 15], ["L", 15, 15],
  # ], file, true, 3, "#88F")
  # write_path([
  #   ["M", 43, 15], ["L", 57, 15], ["L", 57, 43], ["L", 85, 43], ["L", 85, 57],
  #   ["L", 57, 57], ["L", 57, 85], ["L", 43, 85], ["L", 43, 57], ["L", 15, 57],
  #   ["L", 15, 43], ["L", 43, 43], ["L", 43, 15],
  # ], file, true, 3, "#FFF")
  file.puts footer
end

File.open('nor.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#D00")
  x1 = Math.sin(10/180.0 * Math::PI) * 40
  y1 = Math.cos(10/180.0 * Math::PI) * 40
  x2 = Math.sin(20/180.0 * Math::PI) * 40
  y2 = Math.cos(20/180.0 * Math::PI) * 40
  write_path([
    ["M", 50 - x2, 50 - y2], ["A", 40, 40, 1, 0, 1, 50 + x2, 50 - y2], ["L", 50 + x2, 50 + y2],
    ["A", 40, 40, 1, 0, 1, 50 - x2, 50 + y2], ["L", 50 - x2, 50 - y2],
  ], file, true, 0, "#FFF")
  write_path([
    ["M", 50 - x1, 50 - y1], ["A", 40, 40, 1, 0, 1, 50 + x1, 50 - y1], ["L", 50 + x1, 50 + y1],
    ["A", 40, 40, 1, 0, 1, 50 - x1, 50 + y1], ["L", 50 - x1, 50 - y1],
  ], file, true, 0, "#007")
  # write_circle(50, 50, 30, file, false, "#FFF", 8)
  # write_circle(50, 50, 36, file, false, "#007", 8)
  # write_path([
  #   ["M", 15, 15], ["L", 15, 85], ["L", 85, 85], ["L", 85, 15], ["L", 15, 15],
  # ], file, true, 3, "#D00")
  # write_path([
  #   ["M", 40, 15], ["L", 40, 85], ["L", 60, 85], ["L", 60, 15], ["L", 40, 15],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 45, 15], ["L", 45, 85], ["L", 55, 85], ["L", 55, 15], ["L", 45, 15],
  # ], file, true, 3, "#007")
  file.puts footer
end

File.open('nor2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#D00")
  # write_path([
  #   ["M", 40, 15], ["L", 40, 85], ["L", 60, 85], ["L", 60, 15], ["L", 40, 15],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 45, 15], ["L", 45, 85], ["L", 55, 85], ["L", 55, 15], ["L", 45, 15],
  # ], file, true, 3, "#007")
  # write_circle(50, 50, 30, file, false, "#FFF", 8)
  # write_circle(50, 50, 36, file, false, "#007", 8)
  write_path([
    ["M", 15, 15], ["L", 15, 85], ["L", 85, 85], ["L", 85, 15], ["L", 15, 15],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 40, 15], ["L", 40, 85], ["L", 60, 85], ["L", 60, 15], ["L", 40, 15],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 45, 15], ["L", 45, 85], ["L", 55, 85], ["L", 55, 15], ["L", 45, 15],
  ], file, true, 3, "#007")
  file.puts footer
end

File.open('bel.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#D00")
  write_circle(50, 50, 26.7, file, true, "#ED0")
  write_circle(50, 50, 13.3, file, true, "#000")
  file.puts footer
end

File.open('dut.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(4) do |n|
    x = Math.sin(n * 120.0 / 180 * Math::PI) * 36 + 50
    y = Math.cos(n * 120.0 / 180 * Math::PI) * 36 + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#E80")
  path = []
  0.upto(4) do |n|
    x = Math.sin(n * 120.0 / 180 * Math::PI) * 36 + 50
    y = Math.cos(n * 120.0 / 180 * Math::PI) * 36 + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, false, 8, "#000")
  file.puts footer
end

File.open('dut2.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(4) do |n|
    x = Math.sin(n * 120.0 / 180 * Math::PI) * 36 + 50
    y = Math.cos(n * 120.0 / 180 * Math::PI) * 36 + 42
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#E80")
  path = []
  0.upto(4) do |n|
    x = Math.sin(n * 120.0 / 180 * Math::PI) * 36 + 50
    y = Math.cos(n * 120.0 / 180 * Math::PI) * 36 + 42
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, false, 8, "#000")
  file.puts footer
end

File.open('slv2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#D00")
  # write_path([
  #   ["M", 45, 18], ["L", 55, 18], ["L", 55, 82], ["L", 45, 82], ["L", 45, 18],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 27.5, 35], ["L", 72.5, 35], ["L", 72.5, 45], ["L", 27.5, 45], ["L", 27.5, 35],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 25, 65], ["L", 75, 65], ["L", 75, 55], ["L", 25, 55], ["L", 25, 65],
  # ], file, true, 3, "#FFF")
  write_path([
    ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  ], file, true, 3, "#007")
  write_path([
    ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  ], file, true, 3, "#D00")
  file.puts footer
end

File.open('slv3.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#D00")
  write_path([
    ["M", 45, 18], ["L", 55, 18], ["L", 55, 82], ["L", 45, 82], ["L", 45, 18],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 27.5, 35], ["L", 72.5, 35], ["L", 72.5, 45], ["L", 27.5, 45], ["L", 27.5, 35],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 27.5, 65], ["L", 72.5, 65], ["L", 72.5, 55], ["L", 27.5, 55], ["L", 27.5, 65],
  ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  # ], file, true, 3, "#007")
  # write_path([
  #   ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  # ], file, true, 3, "#D00")
  file.puts footer
end

File.open('slv.svg', 'w') do |file|
  file.puts header
  inner = 4.5
  outer = 7
  upper = 37.5
  lower = 60
  write_path([
    ["M", 50 - outer, 12], ["L", 50 + outer, 12], ["A", 100, 100, 1, 0, 0, 50 + inner, upper - inner],
    ["L", 50 + inner, 88], ["L", 50 - inner, 88], ["L", 50 - inner, upper - inner],
    ["A", 100, 100, 1, 0, 0, 50 - outer, 12],
  ], file, true, 3, "#000")
  write_path([
    ["M", 25, upper - outer], ["A", 100, 100, 1, 0, 0, 50 - inner, upper - inner],
    ["L", 50 + inner, upper - inner], ["A", 100, 100, 1, 0, 0, 75, upper - outer],
    ["L", 75, upper + outer], ["A", 100, 100, 1, 0, 0, 50 + inner, upper + inner],
    ["L", 50 - inner, upper + inner], ["A", 100, 100, 1, 0, 0, 25, upper + outer],
    ["L", 25, upper - outer]
  ], file, true, 3, "#000")
  write_path([
    ["M", 20, lower - outer], ["A", 100, 100, 1, 0, 0, 50 - inner, lower - inner],
    ["L", 50 + inner, lower - inner], ["A", 100, 100, 1, 0, 0, 80, lower - outer],
    ["L", 80, lower + outer], ["A", 100, 100, 1, 0, 0, 50 + inner, lower + inner],
    ["L", 50 - inner, lower + inner], ["A", 100, 100, 1, 0, 0, 20, lower + outer],
    ["L", 20, lower - outer]
  ], file, true, 3, "#000")
  # write_path([
  #   ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  # ], file, true, 3, "#007")
  # write_path([
  #   ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  # ], file, true, 3, "#D00")
  file.puts footer
end

File.open('cro.svg', 'w') do |file|
  file.puts header
  0.upto(4) do |x|
    0.upto(4) do |y|
      x1 = x * 64.0 / 5 + 18
      y1 = y * 64.0 / 5 + 18
      x2 = x1 + 64.0 / 5
      y2 = y1 + 64.0 / 5
      color = (x + y) % 2 == 0 ? "#FFF" : "#D00"
      write_path([
        ["M", x1, y1], ["L", x2, y1], ["L", x2, y2], ["L", x1, y2], ["L", x1, y1],
      ], file, true, 3, color)
    end
  end
  file.puts footer
end

File.open('hun2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#D00")
  # write_circle(50, 50, 30, file, true, "#FFF")
  # write_path([
  #   ["M", 46, 25], ["L", 54, 25], ["L", 54, 75], ["L", 46, 75], ["L", 46, 25],
  # ], file, true, 3, "#070")
  # write_path([
  #   ["M", 35, 35], ["L", 65, 35], ["L", 65, 43], ["L", 35, 43], ["L", 35, 35],
  # ], file, true, 3, "#070")
  # write_path([
  #   ["M", 30, 50], ["L", 70, 50], ["L", 70, 58], ["L", 30, 58], ["L", 30, 50],
  # ], file, true, 3, "#070")
  write_path([
    ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  ], file, true, 3, "#070")
  file.puts footer
end

File.open('hun3.svg', 'w') do |file|
  file.puts header
  write_path(scale_path([
    ["M", 17.5, 36], ["L", 36, 17.5], ["L", 64, 17.5], ["L", 82.5, 36], ["L", 82.5, 64],
    ["L", 64, 82.5], ["L", 36, 82.5], ["L", 17.5, 64], ["L", 17.5, 36],
  ], -5, -5, 1.1), file, true, 3, "#D00")
  write_path(scale_path([
    ["M", 44, 17.5], ["L", 56, 17.5], ["L", 56, 44], ["L", 82.5, 44], ["L", 82.5, 56],
    ["L", 56, 56], ["L", 56, 82.5], ["L", 44, 82.5], ["L", 44, 56], ["L", 17.5, 56],
    ["L", 17.5, 44], ["L", 44, 44], ["L", 44, 17.5],
  ], -5, -5, 1.1), file, true, 3, "#272")
  [[-1, -1], [1, 1], [-1, 1], [1, -1]].each do |pair|
    x = pair[0]
    y = pair[1]
    write_path(scale_path([
      ["M", 50 + 32.5*x, 50 + 6*y], ["L", 50 + 6*x, 50 + 6*y], ["L", 50 + 6*x, 50 + 32.5*y],
      ["L", 50 + 14*x, 50 + 32.5*y], ["L", 50 + 14*x, 50 + 14*y],
      ["L", 50 + 32.5*x, 50 + 14*y], ["L", 50 + 32.5*x, 50 + 6*y],
    ], -5, -5, 1.1), file, true, 3, "#FFF")
  end
  file.puts footer
end

File.open('hun.svg', 'w') do |file|
  file.puts header
  size1 = 18
  size2 = 24
  write_path([
    ["M", size1, size1], ["L", 100 - size1, size1], ["L", 100 - size1, 100 - size1],
    ["L", size1, 100 - size1], ["L", size1, size1], ["L", 100 - size1, size1],
  ], file, false, 6, "#000")
  write_path([
    ["M", size1, size1], ["L", 100 - size1, size1], ["L", 100 - size1, 100 - size1],
    ["L", size1, 100 - size1], ["L", size1, size1], ["L", 100 - size1, size1],
  ], file, true, 0, "#FFF")
  [[-1, -1], [1, 1], [-1, 1], [1, -1]].each do |pair|
    sizeX = 50 - (50 - size1) * pair[0]
    sizeY = 50 - (50 - size1) * pair[1]
    write_path([
      ["M", sizeX, sizeY], ["L", sizeX + size2 * pair[0], sizeY],
      ["L", sizeX + size2 * pair[0], sizeY + size2 * pair[1]],
      ["L", sizeX, sizeY + size2 * pair[1]],
    ], file, true, 0, "#000")
  end
  file.puts footer
end

File.open('bul2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#D00")
  # write_circle(50, 50, 26.7, file, true, "#070")
  # write_circle(50, 50, 13.3, file, true, "#FFF")
  write_path([
    ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  ], file, true, 3, "#070")
  write_path([
    ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  ], file, true, 3, "#D00")
  file.puts footer
end

File.open('bul3.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#D00")
  write_circle(50, 50, 26.7, file, true, "#070")
  write_circle(50, 50, 13.3, file, true, "#FFF")
  # write_path([
  #   ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  # ], file, true, 3, "#070")
  # write_path([
  #   ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  # ], file, true, 3, "#D00")
  file.puts footer
end

File.open('bul.svg', 'w') do |file|
  file.puts header
  size1 = 16
  size1b = 20
  size2 = 2
  size3 = 16
  write_path([
    ["M", size1, size1b], ["L", 100 - size1, size1b], ["L", 100 - size1, 100 - size1b],
    ["L", size1, 100 - size1b], ["L", size1, size1b], ["L", 100 - size1, size1b],
  ], file, false, 6, "#000")
  write_path([
    ["M", size1, size1b], ["L", 100 - size1, size1b], ["L", 100 - size1, 100 - size1b],
    ["L", size1, 100 - size1b], ["L", size1, size1b], ["L", 100 - size1, size1b],
  ], file, true, 0, "#FFF")
  write_path([
    ["M", size1 + size2, size1b + size2], ["L", size1 + size3, size1b + size2],
    ["L", 100 - size1 - size2, 100 - size1b - size2], ["L", 100 - size1b - size3, 100 - size1b - size2],
    ["L", size1 + size2, size1b + size2],
  ], file, true, 0, "#000")
  write_path([
    ["M", 100 - size1 - size2, size1b + size2], ["L", 100 - size1 - size3, size1b + size2],
    ["L", size1 + size2, 100 - size1b - size2], ["L", size1 + size3, 100 - size1b - size2],
    ["L", 100 - size1 - size2, size1b + size2],
  ], file, true, 0, "#000")
  # write_path([
  #   ["M", 10, 20], ["L", 85, 20], ["L", 85, 40], ["L", 10, 40], ["L", 10, 20],
  # ], file, true, 3, "#FFF")
  # write_path([
  #   ["M", 10, 60], ["L", 85, 60], ["L", 85, 40], ["L", 10, 40], ["L", 10, 60],
  # ], file, true, 3, "#070")
  # write_path([
  #   ["M", 10, 80], ["L", 85, 80], ["L", 85, 60], ["L", 10, 60], ["L", 10, 80],
  # ], file, true, 3, "#D00")
  file.puts footer
end

File.open('rom2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#D00")
  # write_circle(50, 50, 26.7, file, true, "#ED0")
  # write_circle(50, 50, 13.3, file, true, "#009")
  write_path([
    ["M", 10, 20], ["L", 10, 80], ["L", 37, 80], ["L", 37, 20], ["L", 10, 20],
  ], file, true, 3, "#007")
  write_path([
    ["M", 63, 20], ["L", 63, 80], ["L", 37, 80], ["L", 37, 20], ["L", 63, 20],
  ], file, true, 3, "#ED0")
  write_path([
    ["M", 90, 20], ["L", 90, 80], ["L", 63, 80], ["L", 63, 20], ["L", 90, 20],
  ], file, true, 3, "#D00")
  file.puts footer
end

File.open('rom3.svg', 'w') do |file|
  file.puts header
  path = [
    ["M", 72, 50], ["L", 80, 42], ["L", 58, 42], ["L", 58, 20], ["L", 50, 28],
    ["L", 42, 20], ["L", 42, 42], ["L", 20, 42], ["L", 28, 50], ["L", 20, 58],
    ["L", 42, 58], ["L", 42, 80], ["L", 50, 72], ["L", 58, 80], ["L", 58, 58],
    ["L", 80, 58], ["L", 72, 50], ["L", 80, 42]
  ]
  write_path(path, file, false, 8, "#007")
  write_path(path, file, true, 3, "#ED0")
  write_circle(50, 50, 8, file, true, "#D00")
  file.puts footer
end

File.open('rom.svg', 'w') do |file|
  file.puts header
  path = [
    ["M", 78, 50], ["L", 88, 40], ["L", 60, 40], ["L", 60, 12], ["L", 50, 22],
    ["L", 40, 12], ["L", 40, 40], ["L", 12, 40], ["L", 22, 50], ["L", 12, 60],
    ["L", 40, 60], ["L", 40, 88], ["L", 50, 78], ["L", 60, 88], ["L", 60, 60],
    ["L", 88, 60], ["L", 78, 50], ["L", 88, 40]
  ]
  write_path(path, file, true, 0, "#000")
  write_path(path, file, false, 4, "#FFF")
  file.puts footer
end

File.open('yug.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 36, file, true, "#D00")
  write_circle(50, 50, 30.5, file, true, "#FFF")
  write_circle(50, 50, 25, file, true, "#007")
  path = []
  0.upto(4) do |n|
    x1 = Math.sin((n * 90.0 - 15) / 180 * Math::PI) * 40 + 50
    y1 = Math.cos((n * 90.0 - 15) / 180 * Math::PI) * 40 + 50
    x2 = Math.sin((n * 90.0 + 15) / 180 * Math::PI) * 40 + 50
    y2 = Math.cos((n * 90.0 + 15) / 180 * Math::PI) * 40 + 50
    x3 = Math.sin((n * 90.0 + 32) / 180 * Math::PI) * 12 + 50
    y3 = Math.cos((n * 90.0 + 32) / 180 * Math::PI) * 12 + 50
    x4 = Math.sin((n * 90.0 + 58) / 180 * Math::PI) * 12 + 50
    y4 = Math.cos((n * 90.0 + 58) / 180 * Math::PI) * 12 + 50
    if (n < 1)
      path.push(["M", x3, y3])
      path.push(["A", 12, 12, 1, 0, 0, x4, y4])
    else
      path.push(["L", x1, y1])
      path.push(["A", 40, 40, 1, 0, 0, x2, y2])
      path.push(["L", x3, y3])
      path.push(["A", 12, 12, 1, 0, 0, x4, y4])
    end
  end
  write_path(path, file, true, 2, "#FFF")
  write_path(path, file, false, 3, "#007")
  file.puts footer
end

File.open('chi.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  path = []
  0.upto(12) do |n|
    x = Math.sin(n * 30.0 / 180 * Math::PI) * 38 + 50
    y = Math.cos(n * 30.0 / 180 * Math::PI) * 38 + 50
    path.push([n == 0 ? "M" : "L", x, y])
    x = Math.sin((n + 0.5) * 30.0 / 180 * Math::PI) * 20 + 50
    y = Math.cos((n + 0.5) * 30.0 / 180 * Math::PI) * 20 + 50
    path.push(["L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  write_circle(50, 50, 22, file, true, "#007")
  write_circle(50, 50, 19, file, true, "#FFF")
  file.puts footer
end

File.open('fin2.svg', 'w') do |file|
  file.puts header
  # write_circle(50, 50, 40, file, true, "#FFF")
  # write_circle(50, 50, 26.7, file, true, "#007")
  # write_circle(50, 50, 13.3, file, true, "#FFF")
  write_path([
    ["M", 10, 20], ["L", 10, 80], ["L", 90, 80], ["L", 90, 20], ["L", 10, 20],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 10, 42.5], ["L", 10, 57.5], ["L", 90, 57.5], ["L", 90, 42.5], ["L", 10, 42.5],
  ], file, true, 3, "#007")
  write_path([
    ["M", 32.5, 20], ["L", 32.5, 80], ["L", 47.5, 80], ["L", 47.5, 20], ["L", 32.5, 20],
  ], file, true, 3, "#007")
  file.puts footer
end

File.open('fin.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#FFF")
  write_circle(50, 50, 26.7, file, true, "#77D")
  write_circle(50, 50, 13.3, file, true, "#FFF")
  file.puts footer
end

File.open('fra.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#D00")
  write_circle(50, 50, 26.7, file, true, "#FFF")
  write_circle(50, 50, 13.3, file, true, "#007")
  file.puts footer
end

File.open('frf.svg', 'w') do |file|
  file.puts header
  top = 32
  topLength = 15
  bottomLength = 25
  bottom = 50
  width = 4
  # write_circle(50, 50, 39, file, true, "#FFF")
  write_path([
    ["M", 5, 50], ["L", 50, 5], ["L", 95, 50], ["L", 50, 95], ["L", 5, 50],
  ], file, true, 3, "#FFF")
  write_path([
    ["M", 50 - width, 17.5], ["L", 50 + width, 17.5], ["L", 50 + width, 82.5], ["L", 50 - width, 82.5],
    ["L", 50 - width, 17.5],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 50 - topLength, top - width], ["L", 50 + topLength, top - width],
    ["L", 50 + topLength, top + width], ["L", 50 - topLength, top + width],
    ["L", 50 - topLength, top - width],
  ], file, true, 3, "#D00")
  write_path([
    ["M", 50 - bottomLength, bottom - width], ["L", 50 + bottomLength, bottom - width],
    ["L", 50 + bottomLength, bottom + width], ["L", 50 - bottomLength, bottom + width],
    ["L", 50 - bottomLength, bottom - width],
  ], file, true, 3, "#D00")
  file.puts footer
end

File.open('ger.svg', 'w') do |file|
  file.puts header
  write_path(scale_path([
    ["M", 40, 15], ["L", 60, 15], ["L", 60, 40], ["L", 85, 40], ["L", 85, 60],
    ["L", 60, 60], ["L", 60, 85], ["L", 40, 85], ["L", 40, 60], ["L", 15, 60],
    ["L", 15, 40], ["L", 40, 40], ["L", 40, 15],
  ], -5, -5, 1.1), file, true, 3, "#000")
  [[-1, -1], [1, 1], [-1, 1], [1, -1]].each do |pair|
    x = pair[0]
    y = pair[1]
    write_path(scale_path([
      ["M", 50 + 35*x, 50 + 8*y], ["L", 50 + 8*x, 50 + 8*y], ["L", 50 + 8*x, 50 + 35*y],
      ["L", 50 + 16*x, 50 + 35*y], ["L", 50 + 16*x, 50 + 16*y],
      ["L", 50 + 35*x, 50 + 16*y], ["L", 50 + 35*x, 50 + 8*y],
    ], -5, -5, 1.1), file, true, 3, "#FFF")
    write_path(scale_path([
      ["M", 50 + 35*x, 50 + 16*y], ["L", 50 + 16*x, 50 + 16*y], ["L", 50 + 16*x, 50 + 35*y],
    ], -5, -5, 1.1), file, false, 2.5, "#000")
  end
  file.puts footer
end

File.open('ita.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#FFF")
  write_circle(50, 50, 40, file, false, "#000")
  -1.upto(1) do |n|
    x = n*16
    write_path([
      ["M", 49+x, 17], ["L", 51+x, 17], ["L", 51+x, 19], ["L", 53+x, 19], ["L", 53+x, 81],
      ["L", 51+x, 81], ["L", 51+x, 83], ["L", 49+x, 83], ["L", 49+x, 81], ["L", 47+x, 81],
      ["L", 47+x, 19], ["L", 49+x, 19], ["L", 49+x, 17],
    ], file, true, 3, "#000")
    write_path([
      ["M", 53+x, 60], ["L", 61+x, 60], ["L", 61+x, 55], ["A", [10, 10], 0, [0, 0], [59+x, 50]],
      ["L", 57+x, 50.5], ["A", [10, 10], 0, [0, 1], [58+x, 55]], ["A", [2, 2], 0, [0, 1], [56+x, 57]],
      ["L", 53+x, 57]
    ], file, true, 3, "#000")
    write_path([
      ["M", 54.5+x, 81], ["L", 54.5+x, 61.5]
    ], file, false, 1, "#000")
  end
  file.puts footer
end

File.open('jap.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 39, file, true, "#FFF")
  write_circle(50, 50, 36, file, true, "#D00")
  file.puts footer
end

File.open('uk.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 26.7, file, true, "#FFF")
  write_circle(50, 50, 13.3, file, true, "#D00")
  file.puts footer
end

File.open('can.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 26.7, file, true, "#FFF")

  path = "m 300.1996,124.30004 28.4309,53.05784
  c 3.2267,5.7664 9.0097,5.23244 14.791,2.01172
  l 20.5879,-10.66602 -15.3438,81.49414
  c -3.2267,14.88855 7.1253,14.88873 12.2344,8.45118
  l 35.9297,-40.23633 5.8301,20.43359
  c 0.6726,2.68329 3.6314,5.50122 8.0683,4.83008
  l 45.4317,-9.55469 -11.9317,43.39844
  c -2.5545,9.65697 -4.5479,13.65613 2.5782,16.20313
  l 16.1933,7.61328 -78.207,63.55078
  c -3.0955,2.40288 -4.6626,6.72735 -3.5606,10.64258
  l 6.8457,22.4707
  c -26.9284,-3.10519 -51.056,-7.77715 -77.998,-10.6543 -2.3784,-0.25399 -6.36,3.67241 -6.3437,6.42969
  l 3.5736,82.32415 -14.2196,0 3.5737,-82.32415
  c 0.016,-2.75728 -3.9653,-6.68368 -6.3438,-6.42969 -26.942,2.87715 -51.0696,7.54911 -77.998,10.6543
  l 6.8457,-22.4707
  c 1.102,-3.91523 -0.465,-8.2397 -3.5606,-10.64258
  L 137.4,301.3364
  l 16.1934,-7.61328
  c 7.1261,-2.547 5.1327,-6.54616 2.5781,-16.20313
  l -11.9316,-43.39844 45.4316,9.55469
  c 4.4369,0.67114 7.3957,-2.14679 8.0684,-4.83008
  l 5.83,-20.43359 35.9297,40.23633
  c 5.1092,6.43755 15.4611,6.43737 12.2344,-8.45118
  l -15.3438,-81.49414 20.5879,10.66602
  c 5.7814,3.22072 11.5643,3.75468 14.7911,-2.01172 z"
  file.puts "<path d=\"#{path}\" style=\"fill: #D00;\" transform=\"translate(11, 11) scale(0.13, 0.13)\" />"

  file.puts footer
end

File.open('can2.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 26.7, file, true, "#FFF")

  path = "M 287.10028,177.71375
  C 286.51039,177.46342 285.5693,177.11147 285.00896,176.93166
  C 284.01966,176.61425 284.0218,176.57022 285.08264,175.41216
  C 286.35557,174.02254 289.72955,160.06468 291.73812,148.75363
  C 292.49758,144.47692 292.62802,139.77121 292.90103,138.29648
  C 293.17404,136.82176 293.55538,134.16725 293.74854,132.39758
  C 293.94166,130.62791 294.41419,127.73208 294.79858,125.96241
  C 295.18298,124.19274 295.66153,119.69946 295.86204,115.97735
  L 296.22659,109.20986
  L 294.63706,108.65575
  C 293.47113,108.24931 292.13583,108.30561 289.62666,108.867
  C 281.52864,110.67881 276.88631,111.19679 269.84973,111.07368
  C 263.2562,110.95833 262.41121,111.0534 260.38092,112.13908
  C 257.99792,113.41334 253.90521,114.94836 252.85644,114.9612
  C 252.50599,114.96549 251.4266,114.24505 250.45784,113.36021
  C 247.88184,111.0074 245.80489,111.29112 242.35146,114.46757
  C 241.8272,114.94979 240.47196,115.62187 239.3398,115.96106
  C 237.19678,116.60312 226.59543,116.82017 225.11556,116.25229
  C 224.24579,115.91854 223.90055,113.36021 224.72527,113.36021
  C 225.87647,113.36021 228.02115,110.63932 228.02115,109.17882
  C 228.02115,106.51994 226.4567,105.64492 222.4388,106.05657
  C 220.53839,106.25127 218.07876,106.78858 216.97304,107.25059
  C 214.61777,108.23469 211.68617,108.02314 208.09192,106.60972
  C 205.62291,105.63879 205.54493,105.64144 201.92488,106.81973
  C 195.96061,108.76106 189.41015,108.19581 189.41015,105.73981
  C 189.41015,105.18262 189.77041,104.03004 190.21074,103.17854
  C 191.57928,100.53213 190.75183,99.813126 184.96774,98.622536
  C 183.0455,98.226876 182.07599,96.270746 182.97214,94.596244
  C 184.19439,92.312516 182.82156,91.801966 175.03651,91.645001
  C 170.24611,91.548415 167.58694,91.260967 166.53747,90.726295
  C 165.69742,90.298319 163.80355,89.323268 162.32882,88.559511
  C 160.8541,87.795753 157.83761,86.42761 155.62552,85.519189
  C 148.26884,82.498104 146.13971,80.472984 148.04318,78.30725
  C 148.83648,77.404579 149.45742,77.342656 154.41067,77.672228
  C 159.23817,77.993439 160.31628,77.896483 163.36376,76.867114
  C 166.3759,75.849649 167.23553,75.768523 169.94581,76.245927
  C 174.18175,76.992079 175.74941,76.581012 178.13472,74.098668
  L 180.16748,71.983171 L 184.38659,72.334574
  C 187.34564,72.58103 189.48576,72.455507 191.55231,71.914304
  C 193.65977,71.362387 194.92959,71.292753 196.01118,71.6698
  C 199.35291,72.834726 204.16025,70.575387 205.83221,67.054155
  C 206.55155,65.539285 206.54421,65.149357 205.76142,63.282971
  C 204.73249,60.829617 201.59637,57.70669 199.67815,57.225248
  C 198.93301,57.038221 197.46376,57.114628 196.41316,57.39504
  C 195.36262,57.675447 193.92887,57.769331 193.22711,57.603663
  C 192.5253,57.43799 189.9315,55.256002 187.46303,52.754797
  C 183.0256,48.258439 182.97498,48.176504 182.97498,45.490594
  C 182.97498,43.222267 182.73162,42.544205 181.50025,41.381102
  C 180.03255,39.994795 177.05152,38.292544 174.28263,37.259641
  C 173.41168,36.934756 172.37916,35.834353 171.7047,34.512238
  C 171.04504,33.219203 169.95305,32.04337 169.06526,31.670077
  C 168.23239,31.319886 166.56804,29.789834 165.36665,28.26996
  C 164.16526,26.750086 162.92992,25.350588 162.62146,25.159962
  C 161.25088,24.31289 162.17288,22.744115 165.12742,20.896026
  C 166.81413,19.840981 168.46599,18.977767 168.79815,18.977767
  C 169.61536,18.977767 170.96589,17.377513 171.42858,15.861034
  C 171.68244,15.028844 171.37688,13.706513 170.49923,11.839055
  C 169.78005,10.308864 168.43032,7.1886657 167.4998,4.9052916
  C 165.9767,1.1676826 165.86237,0.51094711 166.35354,-1.6806668
  C 166.99437,-4.5400525 166.67454,-6.2069859 164.89286,-9.2937475
  C 164.04733,-10.758627 163.71158,-11.949562 163.94062,-12.671309
  C 164.55925,-14.620462 162.24313,-21.023827 160.16939,-23.097565
  C 158.47196,-24.795001 157.59517,-27.578185 158.70904,-27.733144
  C 158.93025,-27.763915 160.02954,-27.846194 161.15183,-27.915978
  C 165.22937,-28.169507 166.03312,-31.319334 163.45079,-36.925206
  L 162.03157,-40.006192 L 163.11868,-42.392491
  C 164.44106,-45.295292 164.47211,-46.387748 163.30203,-48.841418
  C 162.45458,-50.618537 162.45458,-50.854536 163.30203,-52.631656
  C 164.49994,-55.143719 164.44465,-57.325546 163.15338,-58.494092
  C 162.57459,-59.017888 161.82795,-60.32221 161.49407,-61.392593
  C 161.16025,-62.46297 160.09083,-64.66599 159.11757,-66.288189
  C 158.1443,-67.910387 157.10009,-70.144183 156.7971,-71.252185
  C 156.49416,-72.360186 155.48604,-74.22662 154.55686,-75.399821
  C 152.60352,-77.866104 152.54131,-79.867559 154.40976,-80.133079
  C 155.57131,-80.298141 160.9865,-77.650832 160.98763,-76.917394
  C 160.98789,-76.717078 162.13443,-75.759778 163.53542,-74.790046
  C 165.82843,-73.202893 166.46771,-73.025143 169.94023,-73.0092
  C 173.51539,-72.992785 173.92757,-72.868629 175.571,-71.312976
  C 177.79628,-69.206521 179.28999,-68.433244 181.13356,-68.433244
  C 182.0946,-68.433244 183.17967,-67.797643 184.36605,-66.539713
  C 185.34827,-65.498267 187.13859,-64.298054 188.34454,-63.872567
  C 189.55049,-63.447079 191.92753,-62.006642 193.62679,-60.671592
  C 196.45617,-58.448703 196.9697,-58.244231 199.72277,-58.244231
  C 201.37618,-58.244231 203.10783,-58.098882 203.57073,-57.921234
  C 204.03369,-57.743585 205.16075,-56.114684 206.0754,-54.301453
  C 206.99,-52.488221 208.48248,-50.261611 209.39204,-49.353426
  C 210.30159,-48.445237 211.66874,-46.523616 212.43024,-45.083146
  C 213.7524,-42.581899 216.65696,-40.011259 218.16092,-40.011259
  C 219.61119,-40.011259 222.64188,-43.320517 223.23971,-45.556952
  C 223.9834,-48.338804 224.61635,-49.127745 226.1047,-49.127745
  C 227.2574,-49.127745 230.70246,-46.086094 230.70246,-45.068356
  C 230.70246,-44.780913 231.44401,-43.646142 232.3503,-42.546629
  C 233.74855,-40.850319 234.32101,-40.547523 236.12978,-40.547523
  C 238.43984,-40.547523 239.48893,-39.705809 242.65246,-35.314226
  C 243.79132,-33.733277 244.89281,-32.870128 246.23143,-32.509673
  C 247.4095,-32.192452 249.34069,-30.832074 251.1731,-29.028677
  C 254.18503,-26.064398 255.53465,-25.544458 257.49453,-26.593342
  C 259.44685,-27.638209 259.72217,-30.004157 258.57746,-35.899848
  C 257.99524,-38.898485 257.51818,-42.613957 257.51727,-44.15645
  C 257.51641,-45.698944 257.12842,-47.928756 256.65517,-49.111582
  C 255.83018,-51.173436 255.84364,-51.345212 256.98186,-53.274325
  C 258.5676,-55.961988 258.14604,-59.585657 255.67569,-64.501765
  C 254.66322,-66.516605 253.6736,-69.289942 253.47646,-70.664735
  C 253.15235,-72.925291 253.23858,-73.227877 254.37841,-73.82853
  C 255.96682,-74.665601 256.42458,-75.351697 256.43493,-76.910846
  C 256.44297,-78.125098 253.94784,-81.768491 251.94157,-83.472029
  C 251.11739,-84.171843 250.8462,-85.439887 250.50411,-90.192714
  C 250.27223,-93.414678 249.70379,-97.370348 249.24084,-98.983086
  C 247.82371,-103.92014 248.34689,-107.5805 250.46963,-107.5805
  C 251.59686,-107.5805 253.48928,-105.66055 253.98876,-104.01019
  C 254.18139,-103.37376 255.41029,-101.86552 256.71974,-100.65854
  C 258.84034,-98.703816 259.39167,-98.464021 261.76539,-98.464021
  C 263.57812,-98.464021 265.23668,-98.035283 266.95176,-97.123361
  C 268.33854,-96.385998 270.00739,-95.782701 270.66024,-95.782701
  C 271.31314,-95.782701 272.75826,-95.058745 273.87171,-94.17391
  C 274.98515,-93.289074 276.42883,-92.565118 277.0799,-92.565118
  C 278.50165,-92.565118 280.03874,-94.126273 280.03874,-95.57025
  C 280.03874,-96.144315 280.7627,-99.57872 281.64753,-103.20226
  C 282.53237,-106.82579 283.25632,-110.5076 283.25632,-111.38404
  C 283.25632,-113.2338 284.58567,-116.69699 285.29568,-116.69699
  C 286.38376,-116.69699 288.61896,-119.39693 288.61896,-120.71119
  C 288.61896,-121.47244 289.22226,-123.28583 289.95962,-124.74095
  C 290.69698,-126.19606 291.30028,-127.98222 291.30028,-128.71019
  C 291.30028,-130.78706 292.22587,-132.71114 294.00793,-134.33881
  C 295.32969,-135.54605 295.73762,-136.46777 296.10713,-139.08193
  C 296.35938,-140.86652 296.7972,-142.77392 297.08007,-143.3206
  C 297.36294,-143.86729 297.75902,-145.88315 297.96025,-147.80029
  C 298.23765,-150.44311 298.71979,-151.84152 299.95406,-153.58327
  C 300.84943,-154.84678 301.9846,-157.01864 302.47666,-158.40965
  C 303.58071,-161.53067 305.54156,-164.75472 306.57748,-165.15223
  C 307.6631,-165.56883 308.09555,-164.68546 308.79389,-160.62479
  C 309.15185,-158.54341 309.98169,-156.21615 310.81477,-154.95727
  C 313.79238,-150.4578 317.18959,-141.25214 317.86297,-135.85824
  C 318.07525,-134.1578 318.60646,-132.89989 319.44819,-132.10439
  C 320.78303,-130.84287 321.68087,-127.42861 322.38333,-120.94275
  C 322.8383,-116.74193 322.96998,-116.49368 325.63608,-114.81065
  L 327.70589,-113.50404
  L 327.41396,-109.87194
  C 327.13995,-106.46277 327.22349,-106.09173 328.77503,-103.82666
  C 330.73155,-100.97036 330.82973,-99.70671 329.3244,-96.756025
  C 327.96377,-94.08896 328.44506,-92.537297 331.05093,-91.189746
  C 334.08038,-89.623158 339.21105,-91.198525 344.41977,-95.294653
  C 345.54985,-96.183344 346.04904,-96.273468 347.27007,-95.809236
  C 350.06776,-94.745556 351.24816,-95.098772 353.00576,-97.525559
  C 355.17381,-100.51905 359.33686,-104.89918 360.01395,-104.89918
  C 362.95997,-104.89918 363.50578,-101.33066 361.03526,-98.221903
  C 357.65034,-93.962536 356.88284,-90.105356 358.08554,-83.39758
  C 358.40801,-81.599064 358.2479,-81.296037 355.70092,-78.88456
  C 353.49847,-76.799277 352.97063,-75.959488 352.97063,-74.540699
  C 352.97063,-73.150312 353.27955,-72.634276 354.44535,-72.077264
  C 355.25645,-71.689728 355.99499,-70.848721 356.08655,-70.208369
  C 356.17812,-69.568016 355.14244,-66.714572 353.78504,-63.867386
  C 350.59958,-57.185748 350.35302,-55.92926 351.83419,-53.925864
  C 354.29437,-50.598293 354.30878,-49.811605 351.99557,-45.114067
  C 347.17543,-35.325589 347.07172,-35.040243 347.07172,-31.565865
  C 347.07172,-28.65008 347.26561,-28.01338 348.61257,-26.505872
  C 350.67588,-24.196622 353.04487,-24.167299 355.95213,-26.415008
  C 357.11428,-27.313512 359.06246,-28.328268 360.28142,-28.670019
  C 361.90895,-29.12632 363.16197,-30.068906 364.99821,-32.218251
  C 366.97032,-34.526642 368.17123,-35.390333 370.6813,-36.305553
  C 372.43172,-36.943787 374.41159,-38.036956 375.08099,-38.734807
  C 380.44224,-44.323877 381.44514,-44.764466 383.35967,-42.371807
  C 384.04453,-41.515925 384.60696,-40.333018 384.60953,-39.743127
  C 384.6121,-39.153237 385.10144,-37.871432 385.69696,-36.894676
  C 386.61325,-35.391764 387.0445,-35.144445 388.50217,-35.285884
  C 389.98642,-35.429904 390.4112,-35.837362 391.57347,-38.232006
  C 392.34644,-39.82457 394.52491,-42.589466 396.67613,-44.708277
  C 398.74075,-46.741778 400.94112,-49.015913 401.56584,-49.761909
  C 402.45511,-50.823797 403.39779,-51.197016 405.90796,-51.48101
  C 408.21079,-51.741543 409.7067,-52.279475 411.21695,-53.390131
  C 412.37347,-54.240635 414.61445,-55.42847 416.19692,-56.029761
  C 417.77939,-56.631052 419.53127,-57.613686 420.08998,-58.213396
  C 420.64869,-58.813105 421.76277,-59.437804 422.56571,-59.601616
  C 424.37968,-59.971703 425.78686,-60.746947 428.32515,-62.774609
  C 430.04167,-64.14582 430.88371,-64.395317 434.67259,-64.655378
  C 439.22627,-64.967934 440.07001,-65.347662 444.55634,-69.103574
  C 446.75006,-70.940128 449.80127,-71.106675 451.54206,-69.484879
  C 453.03323,-68.095639 453.02295,-67.945635 451.18411,-64.261905
  C 450.34172,-62.574384 449.48329,-60.493305 449.27646,-59.637289
  C 449.06964,-58.781272 448.18644,-57.413923 447.31378,-56.598737
  C 446.44112,-55.783552 445.38161,-54.289649 444.95931,-53.278958
  C 444.53702,-52.268262 443.3174,-50.395092 442.24904,-49.116355
  C 440.8533,-47.445759 440.40048,-46.478687 440.64019,-45.680437
  C 441.61955,-42.419138 441.56895,-40.562517 440.44898,-38.664304
  C 439.08178,-36.347081 439.03725,-35.562066 440.17452,-33.826367
  C 441.08,-32.444421 441.02155,-31.285672 439.83566,-27.10926
  C 438.88303,-23.75436 439.39563,-22.30176 442.2395,-20.297217
  C 445.25407,-18.172346 445.34657,-16.989938 442.79483,-13.198065
  C 441.76252,-11.664061 440.88115,-9.8902499 440.83622,-9.2562626
  C 440.7913,-8.6222754 440.69847,-7.8622394 440.62995,-7.5672942
  C 440.56142,-7.2723491 440.47752,-6.1206957 440.4435,-5.0080607
  C 440.39558,-3.4410924 439.89812,-2.4605232 438.23658,-0.65797939
  C 435.8278,1.9552344 435.77318,2.1568642 436.89262,4.3032764
  C 438.41247,7.2174687 438.05191,8.1501117 433.25271,13.718386
  C 431.16045,16.14594 430.62164,17.164289 430.62164,18.691113
  C 430.62164,21.033739 431.9154,23.133877 433.79996,23.850379
  C 436.23851,24.777515 440.34996,27.685888 440.6765,28.714737
  C 441.15926,30.235769 440.48644,31.676399 438.79224,32.749292
  C 436.89711,33.949429 431.75882,38.341156 428.84373,41.252334
  C 427.65156,42.442904 424.99384,44.33384 422.93768,45.454417
  C 418.07465,48.104703 417.79194,48.416718 417.27172,51.707554
  C 416.7487,55.016195 415.65951,56.837245 413.48287,58.042311
  C 412.60158,58.530225 411.23469,59.486512 410.44536,60.167396
  C 408.06214,62.223158 406.04237,63.077898 404.38102,62.733724
  C 399.41239,61.704408 399.61516,61.688197 397.99059,63.244639
  C 395.63384,65.502551 394.52748,68.815257 395.32406,71.2289
  C 396.25577,74.052013 398.12288,74.790866 405.18711,75.131935
  C 409.49101,75.339738 412.62962,75.167281 416.44245,74.513505
  C 419.35041,74.014887 422.04249,73.726972 422.42485,73.873699
  C 422.80722,74.020427 423.27715,74.855717 423.46915,75.729896
  C 423.96239,77.975598 425.23505,78.842109 428.26708,78.99665
  C 429.71505,79.07045 431.52495,79.377923 432.28906,79.679925
  C 433.05316,79.981922 435.21479,80.211041 437.09268,80.189081
  C 439.1181,80.165394 441.12514,80.468785 442.02649,80.934895
  C 442.8622,81.367054 444.36732,81.720639 445.37121,81.720639
  C 447.30505,81.720639 450.03439,83.703497 450.03439,85.108427
  C 450.03439,87.051773 447.92954,88.563104 444.27993,89.240249
  C 439.99565,90.035159 433.62028,93.048758 431.98631,95.051376
  C 430.87211,96.416956 430.6407,96.465816 425.55115,96.410106
  C 422.64748,96.378326 419.28759,96.173126 418.08474,95.954106
  C 415.14318,95.418492 413.87226,96.592136 414.26038,99.485746
  C 414.61596,102.13681 413.77978,103.17298 410.98199,103.54825
  C 408.18668,103.92317 407.56277,104.92387 408.02443,108.29196
  C 408.3327,110.54106 408.22932,110.92673 407.08164,111.80908
  C 406.36861,112.35726 404.89886,112.80543 403.79248,112.81202
  C 401.73546,112.82429 397.48053,111.40494 397.48053,110.7065
  C 397.48053,110.16807 393.10901,108.76675 392.13002,108.99135
  C 391.69427,109.09133 390.53961,109.8739 389.56411,110.7304
  C 388.5886,111.5869 387.56475,112.28768 387.28889,112.28768
  C 387.01303,112.28768 385.39252,111.58259 383.68777,110.72081
  C 377.75213,107.72025 372.12402,107.6209 371.40044,110.50389
  C 371.06176,111.85329 371.39474,112.74177 373.45509,115.9862
  L 374.61188,117.80779 L 373.38459,118.80158
  C 371.72484,120.14557 371.22868,120.08368 366.30406,117.91845
  C 363.95617,116.88615 361.79059,116.04153 361.49167,116.04153
  C 361.19274,116.04153 359.6278,115.4169 358.01402,114.65345
  L 355.07986,113.26538 L 352.43753,114.21555 L 349.7952,115.16572
  L 346.95874,113.76619
  C 343.31039,111.96608 338.84951,111.5086 332.42482,112.2757
  C 326.33989,113.00223 322.38951,112.25501 316.38561,109.24186
  C 313.00418,107.54484 312.44381,107.42876 308.33243,107.57368
  C 304.18044,107.72003 303.87364,107.813 303.25213,109.11301
  C 302.52264,110.63889 301.66141,118.59211 300.93397,130.52066
  C 300.48608,137.86499 300.47169,142.38054 298.01371,153.04374
  C 296.1109,161.29848 293.75659,170.71427 292.16154,173.74653
  C 291.29499,175.39382 290.58599,177.07914 290.58599,177.49158
  C 290.58599,178.32032 288.79798,178.43428 287.10028,177.71375 z"
  file.puts "<path d=\"#{path}\" style=\"fill: #D00;\" transform=\"translate(11, 50) scale(0.13, 0.13)\" />"

  file.puts footer
end

File.open('aus.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 24, file, true, "#FFF")
  file.puts footer
end

File.open('nz.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 20, file, true, "#FFF")
  write_circle(50, 50, 16, file, true, "#007")
  file.puts footer
end

File.open('ind.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 22, file, true, "#99F")
  file.puts footer
end

File.open('sa.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 40, file, true, "#007")
  write_circle(50, 50, 26.7, file, true, "#FFF")
  write_circle(50, 50, 13.3, file, true, "#F70")
  file.puts footer
end

File.open('usa3.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 52
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, false, 4, "#000")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 52
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  file.puts footer
end

File.open('usa2.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 45, file, true, "#570")
  starsize = -28
  0.upto(4) do |n|
    x1 = Math.sin((n * 144.0 - 31.0) / 180 * Math::PI) * starsize * -1.3 + 50
    y1 = Math.cos((n * 144.0 - 31.0) / 180 * Math::PI) * starsize * -1.3 + 50
    x2 = Math.sin((n * 144.0 + 31.0) / 180 * Math::PI) * starsize * -1.3 + 50
    y2 = Math.cos((n * 144.0 + 31.0) / 180 * Math::PI) * starsize * -1.3 + 50
    x3 = Math.sin((n * 144.0 + 30.5) / 180 * Math::PI) * starsize * -1.1 + 50
    y3 = Math.cos((n * 144.0 + 30.5) / 180 * Math::PI) * starsize * -1.1 + 50
    x4 = Math.sin((n * 144.0 - 30.5) / 180 * Math::PI) * starsize * -1.1 + 50
    y4 = Math.cos((n * 144.0 - 30.5) / 180 * Math::PI) * starsize * -1.1 + 50
    path = "M #{x1} #{y1} A #{starsize * -1.3} #{starsize * -1.3} 1 0 0 #{x2} #{y2}"
    path += "L #{x3} #{y3} A #{starsize * -1.1} #{starsize * -1.1} 1 0 1 #{x4} #{y4}"
    file.puts("<path d=\"#{path}\" stroke=\"#000\" stroke-width=\"#{0}\" fill=\"#FFF\" />")
  end
  # path = []
  # 0.upto(6) do |n|
  #   x = Math.sin(n * 144.0 / 180 * Math::PI) * starsize + 50
  #   y = Math.cos(n * 144.0 / 180 * Math::PI) * starsize + 52
  #   path.push([n == 0 ? "M" : "L", x, y])
  # end
  # write_path(path, file, false, 1, "#000")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * starsize + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * starsize + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  file.puts footer
end

File.open('usa.svg', 'w') do |file|
  file.puts header
  starsize = -28
  write_circle(50, 50, 45, file, true, "#570")
  write_circle(50, 50, starsize * -1.3, file, true, "#FFF")
  write_circle(50, 50, starsize * -1.1, file, true, "#570")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * starsize + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * starsize + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  file.puts footer
end

File.open('bra.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 45, file, true, "#570")
  starsize = -28
  0.upto(3) do |n|
    x1 = Math.sin((n * 90.0 + 5.0) / 180 * Math::PI) * starsize * -1.3 + 50
    y1 = Math.cos((n * 90.0 + 5.0) / 180 * Math::PI) * starsize * -1.3 + 50
    x2 = Math.sin((n * 90.0 + 85.0) / 180 * Math::PI) * starsize * -1.3 + 50
    y2 = Math.cos((n * 90.0 + 85.0) / 180 * Math::PI) * starsize * -1.3 + 50
    x3 = Math.sin((n * 90.0 + 84.5) / 180 * Math::PI) * starsize * -1.1 + 50
    y3 = Math.cos((n * 90.0 + 84.5) / 180 * Math::PI) * starsize * -1.1 + 50
    x4 = Math.sin((n * 90.0 + 5.5) / 180 * Math::PI) * starsize * -1.1 + 50
    y4 = Math.cos((n * 90.0 + 5.5) / 180 * Math::PI) * starsize * -1.1 + 50
    path = "M #{x1} #{y1} A #{starsize * -1.3} #{starsize * -1.3} 1 0 0 #{x2} #{y2}"
    path += "L #{x3} #{y3} A #{starsize * -1.1} #{starsize * -1.1} 1 0 1 #{x4} #{y4}"
    file.puts("<path d=\"#{path}\" stroke=\"#000\" stroke-width=\"#{0}\" fill=\"#FFF\" />")
  end
  # path = []
  # 0.upto(6) do |n|
  #   x = Math.sin(n * 144.0 / 180 * Math::PI) * starsize + 50
  #   y = Math.cos(n * 144.0 / 180 * Math::PI) * starsize + 52
  #   path.push([n == 0 ? "M" : "L", x, y])
  # end
  # write_path(path, file, false, 1, "#000")
  path = []
  smallstar = -7.5
  centerDist = 21
  centerAngle = 22.5
  cx = Math.sin(centerAngle / 180 * Math::PI) * centerDist
  cy = Math.cos(centerAngle / 180 * Math::PI) * centerDist
  0.upto(6) do |n|
    x = Math.sin((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + cx + 50
    y = Math.cos((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + cy + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  smallstar = -6.5
  0.upto(6) do |n|
    x = Math.sin((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar - cx + 50
    y = Math.cos((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar - cy + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  0.upto(6) do |n|
    x = Math.sin((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 32
    y = Math.cos((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  smallstar = -5.5
  0.upto(6) do |n|
    x = Math.sin((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 62
    y = Math.cos((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 37
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  smallstar = -4
  0.upto(6) do |n|
    x = Math.sin((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 57
    y = Math.cos((n * 144.0 + 22.5) / 180 * Math::PI) * smallstar + 51
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FFF")
  file.puts footer
end

File.open('ussr2.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 52
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, false, 4, "#FFF")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 52
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#D00")
  file.puts footer
end

File.open('ussr.svg', 'w') do |file|
  file.puts header
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, false, 4, "#FFF")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#D00")
  file.puts footer
end

File.open('chc.svg', 'w') do |file|
  file.puts header
  write_circle(50, 50, 42, file, true, "#D00")
  # path = []
  # 0.upto(6) do |n|
  #   x = Math.sin(n * 144.0 / 180 * Math::PI) * -40 + 50
  #   y = Math.cos(n * 144.0 / 180 * Math::PI) * -40 + 50
  #   path.push([n == 0 ? "M" : "L", x, y])
  # end
  # write_path(path, file, false, 4, "#FFF")
  path = []
  0.upto(6) do |n|
    x = Math.sin(n * 144.0 / 180 * Math::PI) * -35 + 50
    y = Math.cos(n * 144.0 / 180 * Math::PI) * -35 + 50
    path.push([n == 0 ? "M" : "L", x, y])
  end
  write_path(path, file, true, 3, "#FF0")
  file.puts footer
end

# File.open('test.svg', 'w') do |file|
#   file.puts header
#   path = []
#   letter = "M"
#   radius = 2.0
#   0.upto(8) do |n|
#     path.push([
#       letter,
#       ((radius * Math.cos(n/4.0 * Math::PI) + 2) * 100).to_i / 100.0,
#       ((radius * Math.sin(n/4.0 * Math::PI) + 2) * 100).to_i / 100.0
#     ])
#     letter = "L"
#     path.push([
#       "L",
#       ((radius*0.75 * Math.cos((n/4.0 + 1/8.0) * Math::PI) + 2) * 100).to_i / 100.0,
#       ((radius*0.75 * Math.sin((n/4.0 + 1/8.0) * Math::PI) + 2) * 100).to_i / 100.0
#     ])
#   end
#   write_path(path, file)
#   file.puts footer
# end

